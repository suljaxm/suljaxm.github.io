<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SLAM建图</title>
      <link href="/2019/08/31/ros/slam/"/>
      <url>/2019/08/31/ros/slam/</url>
      
        <content type="html"><![CDATA[<h2 id="一、SLAM"><a href="#一、SLAM" class="headerlink" title="一、SLAM"></a>一、SLAM</h2><h3 id="1-1-介绍"><a href="#1-1-介绍" class="headerlink" title="1.1 介绍"></a>1.1 介绍</h3><p>SLAM是机器人自身位置不确定的情况下，在完全未知的环境中创建地图，同时利用地图进行自主定位。</p><ul><li>定位：机器人根据周围环境估计自身在地图上的位置坐标。</li><li>地图构建：机器人根据传感器的结果来构建一张地图。</li></ul><h3 id="1-2-原理"><a href="#1-2-原理" class="headerlink" title="1.2 原理"></a>1.2 原理</h3><center><img width="400" height="350" src="http://suljaxm.com/10_slam_%E5%8E%9F%E7%90%86.png">图1. SLAM原理</center><h2 id="二、数据结构"><a href="#二、数据结构" class="headerlink" title="二、数据结构"></a>二、数据结构</h2><h3 id="2-1-激光雷达"><a href="#2-1-激光雷达" class="headerlink" title="2.1 激光雷达"></a>2.1 激光雷达</h3><p>一般在slam中使用可以直接获得深度信息的传感器。以激光雷达为例，在终端上输入<code>rosmsg show sensor_msgs/LaserScan</code>可以获得其数据结构</p><pre class="line-numbers language-cpp"><code class="language-cpp">std_msgs<span class="token operator">/</span>Header header  uint32 seq  time stamp  string frame_idfloat32 angle_min <span class="token comment" spellcheck="true">//可检测范围的起始角度</span>float32 angle_max <span class="token comment" spellcheck="true">//可检测范围的终止角度，与angle_min组成激光雷达的可检测范围</span>float32 angle_increment <span class="token comment" spellcheck="true">//相邻数据帧之间的角度步长</span>float32 time_increment <span class="token comment" spellcheck="true">//采集到相邻数据帧之间的时间步长，当传感器处于相对运动状态时进行补偿使用</span>float32 scan_time <span class="token comment" spellcheck="true">//采集一帧数据所需要的时间</span>float32 range_min <span class="token comment" spellcheck="true">//最近可检测深度的阈值</span>float32 range_max <span class="token comment" spellcheck="true">//最远可检测深度的阈值</span>float32<span class="token punctuation">[</span><span class="token punctuation">]</span> ranges <span class="token comment" spellcheck="true">//一帧深度数据的存储数组</span>float32<span class="token punctuation">[</span><span class="token punctuation">]</span> intensities<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>而RGB-D摄像头，也可以通过红外摄像头获取周围环境的深度信息，可以通过<code>depthimage_to_laserscan</code>功能包转化为激光雷达的数据。</p><h3 id="2-2-里程计"><a href="#2-2-里程计" class="headerlink" title="2.2 里程计"></a>2.2 里程计</h3><p>机器人在定位时要用到其里程计，在终端上输入<code>rosmsg show nav_msgs/Odometry</code>可以获得其数据结构</p><pre class="line-numbers language-cpp"><code class="language-cpp">std_msgs<span class="token operator">/</span>Header header  uint32 seq  time stamp  string frame_idstring child_frame_idgeometry_msgs<span class="token operator">/</span>PoseWithCovariance pose <span class="token comment" spellcheck="true">//机器人当前位置坐标，包括机器人的XYZ三轴位置和方向参数，以及用于校正误差的协方差矩阵</span>  geometry_msgs<span class="token operator">/</span>Pose pose     geometry_msgs<span class="token operator">/</span>Point position      float64 x      float64 y      float64 z    geometry_msgs<span class="token operator">/</span>Quaternion orientation      float64 x      float64 y      float64 z      float64 w  float64<span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">]</span> covariancegeometry_msgs<span class="token operator">/</span>TwistWithCovariance twist <span class="token comment" spellcheck="true">//机器人当前的运动状态，包括XYZ三轴的线速度与角速度，以及用于校正误差的协方差矩阵</span>  geometry_msgs<span class="token operator">/</span>Twist twist    geometry_msgs<span class="token operator">/</span>Vector3 linear      float64 x      float64 y      float64 z    geometry_msgs<span class="token operator">/</span>Vector3 angular      float64 x      float64 y      float64 z  float64<span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">]</span> covariance<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、SLAM功能包"><a href="#三、SLAM功能包" class="headerlink" title="三、SLAM功能包"></a>三、SLAM功能包</h2><h3 id="3-1-介绍"><a href="#3-1-介绍" class="headerlink" title="3.1 介绍"></a>3.1 介绍</h3><p>借助SLAM功能包，我们只需要输入特定格式的传感器信息，就可以自动建图和定位。在ROS中这种功能的包有很多，比如用于平面地图的gmapping，hector，cartographer等功能包，也有用于三维地图的rtabmap功能包。</p><h3 id="3-2-gmapping"><a href="#3-2-gmapping" class="headerlink" title="3.2 gmapping"></a>3.2 gmapping</h3><p>以<a href="http://wiki.ros.org/gmapping" target="_blank" rel="noopener">gmapping功能包</a>为例，gmapping是基于二维激光雷达的slam建图定位的功能包，采用的是Rao-Blackwellized粒子滤波算法，最后输出的是二维栅格地图。gmapping的总体框架如下</p><center><img width="350" height="200" src="http://suljaxm.com/10_gmapping.png">图2. gmapping功能包的总体框架</center>深度信息，里程计信息，IMU信息是输入信息，其中前两个信息必须输入。### 3.3 应用我们借助gazebo，创建一个迷宫来测试gmapping功能包，<center><img width="350" height="200" src="http://suljaxm.com/10_maze.png">图3. 虚拟迷宫</center>gmapping的应用效果如图4示，我们可以看到随着小车的运动，未知环境开始构建地图的过程。<center><img width="350" height="200" src="http://suljaxm.com/10_gmapping.gif">图4. gmapping应用效果</center><p>参考<br><a href="https://openslam-org.github.io/gmapping.html" target="_blank" rel="noopener">openslam</a></p>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器人 </tag>
            
            <tag> XML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>卡尔曼滤波器</title>
      <link href="/2019/08/28/wu-ren-jia-shi/kalman-filter/"/>
      <url>/2019/08/28/wu-ren-jia-shi/kalman-filter/</url>
      
        <content type="html"><![CDATA[<h2 id="一、高斯函数"><a href="#一、高斯函数" class="headerlink" title="一、高斯函数"></a>一、高斯函数</h2><h3 id="1-1-介绍"><a href="#1-1-介绍" class="headerlink" title="1.1 介绍"></a>1.1 介绍</h3><p>一维高斯函数的表达式为$f\left ( x \right )=\frac{1}{\sqrt{2\pi \delta ^{2}}}exp^{-\frac{1}{2}\frac{\left ( x - \mu \right )^{2}}{\delta ^2}}$，其中$\mu$为函数尖峰值，$\delta$为标准方差。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>mu<span class="token punctuation">,</span> sigma2<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token number">1</span><span class="token operator">/</span>sqrt<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token operator">*</span>pi<span class="token operator">*</span>sigma2<span class="token punctuation">)</span> <span class="token operator">*</span> exp<span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">.</span><span class="token number">5</span><span class="token operator">*</span><span class="token punctuation">(</span>x<span class="token operator">-</span>mu<span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">/</span> sigma2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="1-2-状态更新"><a href="#1-2-状态更新" class="headerlink" title="1.2 状态更新"></a>1.2 状态更新</h3><p>假设像贝叶斯定理一样，两个高斯函数相乘，$f_1\left ( x \right )=\frac{1}{\sqrt{2\pi \delta ^{2}}}exp^{-\frac{1}{2}\frac{\left ( x - \mu \right )^{2}}{\delta ^2}}$ 和$ f_2\left ( x \right )=\frac{1}{\sqrt{2\pi \gamma ^{2}}}exp^{-\frac{1}{2}\frac{\left ( x - \nu  \right )^2}{\gamma ^2}}$，相乘后获得新的高斯函数$f_3\left ( x \right )=\frac{1}{\sqrt{2\pi \delta ^{2’}}}exp^{-\frac{1}{2}\frac{\left ( x - {\mu}’ \right )^{2}}{\delta ^{2’}}}$，其中$f_3\left ( x \right )$ 的波峰处于$f_1\left ( x \right )$，$f_2\left ( x \right )$两个尖峰之间，且更细高，一个相对确定的分布，计算公式为${\mu}’= \frac{1}{\delta ^2+\gamma ^2}[\gamma ^2\mu + \delta ^2\nu ]$，$\delta^{2’}= \frac{1}{\frac{1}{\delta ^2}+\frac{1}{\gamma ^2}}$。</p><center><img width="300" height="100" src="http://suljaxm.com/9_gaussian.png"></center><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>mean1<span class="token punctuation">,</span> var1<span class="token punctuation">,</span> mean2<span class="token punctuation">,</span> var2<span class="token punctuation">)</span><span class="token punctuation">:</span>    new_mean <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token punctuation">(</span>var1<span class="token operator">+</span>var2<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>var1<span class="token operator">*</span>mean2<span class="token operator">+</span>var2<span class="token operator">*</span>mean1<span class="token punctuation">)</span>    new_var <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span>var1 <span class="token operator">+</span> <span class="token number">1</span><span class="token operator">/</span>var2<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span>new_mean<span class="token punctuation">,</span> new_var<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-3-高斯运动预测"><a href="#1-3-高斯运动预测" class="headerlink" title="1.3 高斯运动预测"></a>1.3 高斯运动预测</h3><p>预测函数是两个函数的相加，${\mu}’= \mu + \nu $，$\delta^{2’}= \delta ^2+\gamma ^2$。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">predict</span><span class="token punctuation">(</span>mean1<span class="token punctuation">,</span> var1<span class="token punctuation">,</span> mean2<span class="token punctuation">,</span> var2<span class="token punctuation">)</span><span class="token punctuation">:</span>    new_mean <span class="token operator">=</span> mean1 <span class="token operator">+</span> mean2    new_var <span class="token operator">=</span> var1 <span class="token operator">+</span> var2    <span class="token keyword">return</span> <span class="token punctuation">[</span>new_mean<span class="token punctuation">,</span> new_var<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、卡尔曼滤波"><a href="#二、卡尔曼滤波" class="headerlink" title="二、卡尔曼滤波"></a>二、卡尔曼滤波</h2><h3 id="2-1-介绍"><a href="#2-1-介绍" class="headerlink" title="2.1 介绍"></a>2.1 介绍</h3><p>卡尔曼滤波器本质上是一个预测和更新的估算问题，之前一维高斯函数的根据观测状态$f_2$分布，与预测状态$f_1$分布，获得当前状态$f_3$分布，这种可以由两种相对不确定分布推导相对确定分布，是卡尔曼滤波的核心思想。</p><h3 id="2-2-理论"><a href="#2-2-理论" class="headerlink" title="2.2 理论"></a>2.2 理论</h3><p>下面是卡尔曼滤波器抽象出的7个步骤，</p><center><img width="250" height="250" src="http://suljaxm.com/9_KF.png"></center>$x$表示滤波器的状态向量，$F$是状态转移矩阵，${x}' = Fx+u$，表示了状态 $x\to x^{'}$ 的过程，是前一个状态对当前状态的预测。$P$是状态协方差矩阵，$Q$是过程噪声，$P^{'}=FPF^{T}+Q$ 表示了 $P\to P^{'}$ 的过程，是前一个不确定程度对当前状态的不确定程度的预测。<p>$z$表示观测状态量，$H$是测量矩阵，$y=z-H{x}’$表示了观测值和与预测值的差值。$R$是测量噪声矩阵，$K$为卡尔曼增益，是状态更新中的权重，在$x={x}’+Ky$中是y的权值，而在$P=(I-KH){P}’$中是${P}’$的权值。<br>卡尔曼滤波器的最后两个步骤是滤波器的闭环。$x={x}’+Ky$表示当前状态向量$x$的更新，$P=(I-KH){P}’$表示系统的不确定度$P$的更新，这些都被用于下一个周期的运算。</p><h3 id="2-3-实例（一维追踪）"><a href="#2-3-实例（一维追踪）" class="headerlink" title="2.3 实例（一维追踪）"></a>2.3 实例（一维追踪）</h3><p>假设在恒定速度$v$的前提下，预测物体的位置$s$，这是一维卡尔曼滤波器的追踪问题，其中状态向量x为 $[s,v]^{T}$，因为v保持不变，则当$\Delta t = 1s$时，$F$表示为$[[1., 1.], [0, 1.]]$，当前预测的状态${x}’$为</p><center><img width="240" height="40" src="http://suljaxm.com/9_get_x%27.gif"></center>$P$的初始值可以设置为$[[1000., 0.], [0., 1000.]]$，意味着速度和位置是两个不相关的变量，因为观测值只有$s$，则$H$为$[[1., 0.]]$。因为实例是简化的模型，所以$Q$和$R$都设置为0，一般情况下，$Q$是那些$P$无法表示的噪声，而$R$由传感器厂家提供。<pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 卡尔曼滤波，对当前位置的估计</span><span class="token keyword">def</span> <span class="token function">kalman_filter</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> P<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> n <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>measurements<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># measurement update</span>        z <span class="token operator">=</span> matrix<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span>measurements<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        y <span class="token operator">=</span> z <span class="token operator">-</span> H<span class="token operator">*</span>x        S <span class="token operator">=</span> H<span class="token operator">*</span>P<span class="token operator">*</span>H<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> R        K <span class="token operator">=</span> P<span class="token operator">*</span>H<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>S<span class="token punctuation">.</span>inverse<span class="token punctuation">(</span><span class="token punctuation">)</span>        x <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token punctuation">(</span>K<span class="token operator">*</span>y<span class="token punctuation">)</span>        P <span class="token operator">=</span> <span class="token punctuation">(</span>I <span class="token operator">-</span> <span class="token punctuation">(</span>K<span class="token operator">*</span>H<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span>P        <span class="token comment" spellcheck="true"># prediction</span>        x <span class="token operator">=</span> <span class="token punctuation">(</span>F<span class="token operator">*</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> u        P <span class="token operator">=</span> F<span class="token operator">*</span>P<span class="token operator">*</span>F<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> x<span class="token punctuation">,</span>Pmeasurements <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>x <span class="token operator">=</span> matrix<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># initial state (location and velocity)</span>P <span class="token operator">=</span> matrix<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># initial uncertainty</span>u <span class="token operator">=</span> matrix<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># external motion</span>F <span class="token operator">=</span> matrix<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># next state function</span>H <span class="token operator">=</span> matrix<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># measurement function</span>R <span class="token operator">=</span> matrix<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># measurement uncertainty</span>I <span class="token operator">=</span> matrix<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># identity matrix</span><span class="token keyword">print</span><span class="token punctuation">(</span>kalman_filter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> P<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># output should be:</span><span class="token comment" spellcheck="true"># x: [[3.9996664447958645], [0.9999998335552873]]</span><span class="token comment" spellcheck="true"># P: [[2.3318904241194827, 0.9991676099921091], [0.9991676099921067, 0.49950058263974184]]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-实例（二维追踪）"><a href="#2-4-实例（二维追踪）" class="headerlink" title="2.4 实例（二维追踪）"></a>2.4 实例（二维追踪）</h3><p>假设传感器为激光雷达，可以提供二维测量数据，首先要定义状态转移矩阵$F$，来估算二维位置$(s_x, s_y)$和二维速度$(v_x,v_y)$，则当$\Delta t = 1s$时，$F$表示为$[[1, 0,1,0], [0, 1,0,0,1],[0,0,1,0],[0,0,0,1]]$，当前预测的状态$x^{‘}$为</p><center><img width="400" height="80" src="http://suljaxm.com/9_get_x2%27.gif"></center>又因为激光雷达只能测量距离，则对应的测量矩阵$H=[[1,0,0,0],[0,1,0,0]]$，而只能测量距离不能测量速度的性质，体现在协方差矩阵上就是位置测量的不确定度较低，速度测量的不确定度较高，则$P = [[1,0,0,0],[0,1,0,0],[0,0,1000,0],[0,0,0,1000]]$。该处理方式和一维追踪中的相同。<h2 id="三、扩展卡尔曼滤波"><a href="#三、扩展卡尔曼滤波" class="headerlink" title="三、扩展卡尔曼滤波"></a>三、扩展卡尔曼滤波</h2><h3 id="3-1-介绍"><a href="#3-1-介绍" class="headerlink" title="3.1 介绍"></a>3.1 介绍</h3><p>扩展卡尔曼滤波是为了解决不同传感器融合时采集数据不统一的问题，比如激光雷达的观测值是在笛卡尔坐标系的，而毫米波雷达的观测值是在极坐标系的，在进行传感器融合时，需要统一坐标系，但是当坐标系转换时会引入非线性变化，于是这种非线性的卡尔曼滤波就称为扩展卡尔曼滤波。</p><h3 id="3-2-毫米波雷达"><a href="#3-2-毫米波雷达" class="headerlink" title="3.2 毫米波雷达"></a>3.2 毫米波雷达</h3><p>毫米波雷达的原理是多普勒效应，其测量的数据都是在极坐标系下的，状态向量x为$[\rho ,\phi, \dot{\rho } ]^T$。$\rho$为目标在极坐标下离雷达的距离，$\phi$为方向角，$\dot{\rho }$为距离的变化率。<br>因为预测的状态向量${x}’$为$ [{s_x}’, {s_y}’, {v_x}’,{v_y}’]^T$，则观测值和与预测值的差值</p><center><img width="300" height="100" src="http://suljaxm.com/9_h%28x%29.gif"></center><p>这种非线性的模型时，习惯于将计算差值$y=z-H{x}’$中的$H{x}’$用$h({x}’)$表示。此时$H{x}’$不在是常数矩阵，高斯分布在经过非线性函数的变换后，其结果将不再符合高斯分布，这直接导致卡尔曼滤波器失效。因此我们需要将$h({x}’)$先转化为近似的线性函数。$y=h(x)$可通过泰勒公式在点$(x_0,y_0)$处展开为泰勒级数，并忽略二次以上的高阶项，于是可以如下的式子，<br>$h(x)\approx h(x_0)+\dot{h}(x_0)(x-x_0)$<br>其中，$\dot{h}(x_0)$ 表示$h(x)$在$x_0$处对$x$的偏导，即$\dot{h}(x_0) =\frac{\partial h(x_0)}{\partial x}$，这一项被称为雅可比（Jacobian）式。<br>求得非线性函数$h(x’)$对${s_x}’$，${s_y}’$，${v_x}’$，${v_y}’$的一阶偏导数，并排列成的矩阵，最终得到雅克比（Jacobian）矩阵$H_{3\times 4 }$，</p><center><img width="250" height="100" src="http://suljaxm.com/9_h34.gif"></center><p>将$\rho ,\phi, \dot{\rho }$带入上述公式可得实际的测量矩阵$H_{3\times 4 }$，</p><center><img width="450" height="200" src="http://suljaxm.com/9_h34_0.png"></center><p>其余是卡尔曼滤波的标准步骤。</p><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>扩展卡尔曼滤波，只是增加了对非线性观察矩阵H的线性化处理，依此来满足高斯分布的性质，即高斯分布在经过预测和测量值更新后，还是符合高斯分布。<br>卡尔曼滤波器的这些性质适合融合多个传感器，以此减少单个传感器的误差，降低了单个传感器的精度成本。</p><p>参考<br><a href="https://mp.weixin.qq.com/s/hZQFtHYt0S924JPUCCd7MA" target="_blank" rel="noopener"> 手把手教你写卡尔曼滤波器</a><br><a href="https://mp.weixin.qq.com/s/YO7FVJ1-7L9H2VwVO4NJ2A" target="_blank" rel="noopener">手把手教你写扩展卡尔曼滤波器</a></p>]]></content>
      
      
      <categories>
          
          <category> 无人驾驶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 无人车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>遥控四轮车（语音控制）</title>
      <link href="/2019/08/24/ros/yao-kong-si-lun-che-voice/"/>
      <url>/2019/08/24/ros/yao-kong-si-lun-che-voice/</url>
      
        <content type="html"><![CDATA[<h2 id="一、讯飞开放平台"><a href="#一、讯飞开放平台" class="headerlink" title="一、讯飞开放平台"></a>一、讯飞开放平台</h2><h3 id="1-1-语音听写SDK"><a href="#1-1-语音听写SDK" class="headerlink" title="1.1 语音听写SDK"></a>1.1 语音听写SDK</h3><p><a href="https://www.xfyun.cn" target="_blank" rel="noopener">讯飞开放平台</a> 提供可供开发者的语音识别SDK，针对Linux系统下载对应版本的 <code>语音听写（流式版）SDK</code>，解压文件如下所示，其中主要测试的是文件夹<code>samples</code>中的iat_online_record_sample和tts_online_sample样例。</p><center><img width="500" height="100" src="http://suljaxm.com/8_sdk.png">Linux_iat1226_tts_online 解压文件</center><h3 id="1-2-样例使用"><a href="#1-2-样例使用" class="headerlink" title="1.2 样例使用"></a>1.2 样例使用</h3><p>iat_online_record_sample是讯飞的的语音识别demo，使用方式如下</p><pre class="line-numbers language-cpp"><code class="language-cpp">依赖配置<span class="token punctuation">,</span>将共享库放置在系统库文件中cd libs<span class="token operator">/</span>x64       <span class="token comment" spellcheck="true">//32位系统选x86</span>sudo cp libmsc<span class="token punctuation">.</span>so <span class="token operator">/</span>usr<span class="token operator">/</span>lib<span class="token comment" spellcheck="true">//编译</span>cd samples<span class="token operator">/</span>iat_online_record_sample<span class="token operator">/</span>source  64bit_make<span class="token punctuation">.</span>sh         <span class="token comment" spellcheck="true">// 32位系统选32bit_make.sh </span><span class="token comment" spellcheck="true">//运行</span>cd bin<span class="token operator">/</span><span class="token punctuation">.</span><span class="token operator">/</span>iat_online_record_sample<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>tts_online_sample 是文字转语音的demo，使用的方式类似。</p><h2 id="二、SDK移植ROS系统"><a href="#二、SDK移植ROS系统" class="headerlink" title="二、SDK移植ROS系统"></a>二、SDK移植ROS系统</h2><p>首先在ROS工程中创建功能包，<code>catkin_create_pkg xxx roscpp std_msgs</code>，再将iat_online_record_sample和tts_online_sample的代码复制进xxx包中的src、include文件夹中，主要算法不进行更改，只需要在添加ROS的通信架构，例如ROS的头文件，发布订阅信息之类的。例如对iat_online_record_sample的部分修改，</p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"ros/ros.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"std_msgs/String.h"</span></span><span class="token comment" spellcheck="true">/**.......**/</span><span class="token comment" spellcheck="true">// 初始化ROS</span>ros<span class="token operator">::</span><span class="token function">init</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token string">"voiceRecognition"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ros<span class="token operator">::</span>NodeHandle n<span class="token punctuation">;</span>ros<span class="token operator">::</span>Rate <span class="token function">loop_rate</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 声明Publisher和Subscriber</span><span class="token comment" spellcheck="true">// 订阅唤醒语音识别的信号</span>ros<span class="token operator">::</span>Subscriber wakeUpSub <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">"voiceWakeup"</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> WakeUp<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// 发布信息</span>ros<span class="token operator">::</span>Publisher voiceWordsPub <span class="token operator">=</span> n<span class="token punctuation">.</span>advertise<span class="token operator">&lt;</span>std_msgs<span class="token operator">::</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">"voiceWords"</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/**....  //iat_online_record_sample的算法**/</span>std_msgs<span class="token operator">::</span>String msg<span class="token punctuation">;</span>msg<span class="token punctuation">.</span>data <span class="token operator">=</span> g_result<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//g_result位语音识别的字符串</span>voiceWordsPub<span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>ros<span class="token operator">::</span><span class="token function">spinOnce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后就是<code>CMakeLists.txt</code>部分，添加对应的<code>add_executable</code>和<code>target_link_libraries</code>，<code>c++11</code>的特性也要开启。</p><h2 id="三、遥控四轮车"><a href="#三、遥控四轮车" class="headerlink" title="三、遥控四轮车"></a>三、遥控四轮车</h2><h3 id="3-1-思路"><a href="#3-1-思路" class="headerlink" title="3.1 思路"></a>3.1 思路</h3><p>通过iat_online_record_sample识别语音，然后对翻译出的文字进行关键字词的识别，不同的关键词对应小车的不同运动状态。后期还可以加入tts_online_sample，添加语音对话功能。</p><h3 id="3-2-实现方式"><a href="#3-2-实现方式" class="headerlink" title="3.2 实现方式"></a>3.2 实现方式</h3><p>当语音识别被激活时，麦克风开始获取语音信号，之后将语音识别处理成字符串<code>data</code>，最后根据<code>data</code>控制小车。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">if</span> <span class="token punctuation">(</span>data 包含 ‘前’ <span class="token punctuation">)</span><span class="token punctuation">:</span>     小车前进<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data  包含 ‘后’<span class="token punctuation">)</span><span class="token punctuation">:</span>     小车后退<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data  包含 ‘左’<span class="token punctuation">)</span><span class="token punctuation">:</span>     小车左转<span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">if</span> <span class="token punctuation">(</span>data  包含 ‘右’<span class="token punctuation">)</span><span class="token punctuation">:</span>     小车右转<span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">if</span> <span class="token punctuation">(</span>data 包含 ‘停’ <span class="token punctuation">)</span><span class="token punctuation">:</span>     小车停止<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><center><img width="600" height="300" src="http://suljaxm.com/8_result.png">基于语音控制小车</center><p><a href="https://github.com/suljaxm/Turtle-Communication_ROS/tree/voice_control" target="_blank" rel="noopener">代码参考</a></p>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 机器人 </tag>
            
            <tag> XML </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>遥控四轮车（视觉处理）</title>
      <link href="/2019/08/24/ros/yao-kong-si-lun-che/"/>
      <url>/2019/08/24/ros/yao-kong-si-lun-che/</url>
      
        <content type="html"><![CDATA[<h2 id="一、摄像头（ROS）"><a href="#一、摄像头（ROS）" class="headerlink" title="一、摄像头（ROS）"></a>一、摄像头（ROS）</h2><h3 id="1-1-ROS摄像头驱动"><a href="#1-1-ROS摄像头驱动" class="headerlink" title="1.1 ROS摄像头驱动"></a>1.1 ROS摄像头驱动</h3><p>在linux系统中，可以直接在终端中输入<code>ls /dev/video*</code>，查看是否有可用的摄像头设备。一般只有一个摄像头的系统会返回<code>/dev/video0</code>。<br>在检测到摄像头设备后，用三条语句进行相机的测试，</p><pre class="line-numbers language-cpp"><code class="language-cpp">sudo apt<span class="token operator">-</span>get install ros<span class="token operator">-</span>kinetic<span class="token operator">-</span>usb<span class="token operator">-</span>cam    <span class="token comment" spellcheck="true">//开始安装ROS摄像头的驱动</span>roslaunch usb_cam usb_cam<span class="token operator">-</span>test<span class="token punctuation">.</span>launch  <span class="token comment" spellcheck="true">//启动摄像头</span>rqt_image_view   <span class="token comment" spellcheck="true">//显示摄像机画面</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="1-2-相机标定"><a href="#1-2-相机标定" class="headerlink" title="1.2 相机标定"></a>1.2 相机标定</h3><p>只有经过标定后的摄像头才能进行后续的操作，摄像头参数的标定可以借助标定功能包，安装方式如下，</p><pre><code>sudo apt-get install ros-kinetic-camera-calibration    //标定功能包安装</code></pre><p>标定的具体操作参考<a href="http://wiki.ros.org/camera_calibration" target="_blank" rel="noopener">官网</a>。<br>此外除了普通的RGB相机，其它类型的相机也有相对应的驱动和标定功能包，这视情况而定。</p><h2 id="二、物体识别"><a href="#二、物体识别" class="headerlink" title="二、物体识别"></a>二、物体识别</h2><h3 id="2-1-人脸识别"><a href="#2-1-人脸识别" class="headerlink" title="2.1 人脸识别"></a>2.1 人脸识别</h3><p>本案例中，人脸识别借助OpenCV中的人脸识别接口，一种基于Haar特征的<a href="https://docs.opencv.org/2.4/modules/objdetect/doc/cascade_classification.html" target="_blank" rel="noopener">级联分类器</a>对象检测算法。OpenCV的安装如下，</p><pre class="line-numbers language-cpp"><code class="language-cpp">sudo apt<span class="token operator">-</span>get install ros<span class="token operator">-</span>kinetic<span class="token operator">-</span>vision<span class="token operator">-</span>opencv libopencv<span class="token operator">-</span>dev python<span class="token operator">-</span>opencv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里需要注意的是，OpenCV中的图片格式和ROS中的图片格式是不同的，需要通过<code>cv_bridge</code>库进行转换，即</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> cv_bridge <span class="token keyword">import</span> CvBridge<span class="token comment" spellcheck="true">#ros_imag为ROS中的图像数据，cv_image为opencv可以处理的格式</span>cv_image <span class="token operator">=</span> CvBridge<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>imgmsg_to_cv2<span class="token punctuation">(</span>ros_imag<span class="token punctuation">,</span> <span class="token string">"bgr8"</span><span class="token punctuation">)</span>  ros_image <span class="token operator">=</span> CvBridge<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cv2_to_imgmsg<span class="token punctuation">(</span>cv_image<span class="token punctuation">,</span> <span class="token string">"bgr8"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2-水杯识别"><a href="#2-2-水杯识别" class="headerlink" title="2.2 水杯识别"></a>2.2 水杯识别</h3><p>通过基于tensorflow框架的<a href="https://github.com/osrf/tensorflow_object_detector" target="_blank" rel="noopener">SSD_MobileNet</a>，来进行水杯的识别。tensorflow的环境，可以借助virtualenv工具配置完成。virtualenv的安装如下，</p><pre class="line-numbers language-cpp"><code class="language-cpp">sudo apt<span class="token operator">-</span>get install python<span class="token operator">-</span>pip python<span class="token operator">-</span>dev python<span class="token operator">-</span>virtualenv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>tensorflow环境配置，首先创建一个包含系统环境的空间<code>virtualenv --system-site-packages ~/tensorflow</code>，接着激活新创建的虚拟环境<code>source ~/tensorflow/bin/activate</code>,然后就是更新下pip版本<code>easy_install -U pip</code>，最后便是tensorflow环境的安装，而关于tensorflow的安装要注意和ROS环境相匹配，如果直接<code>pip install --upgrade tensorflow</code>，会出现依赖包因为版本不匹配的错误，因此需要事先限制依赖包的版本。<br>比如kinetic版本的ROS，各依赖包的版本如下，</p><pre class="line-numbers language-cpp"><code class="language-cpp">Flask<span class="token operator">==</span><span class="token number">0.11</span><span class="token punctuation">.</span><span class="token number">1</span>attrdict<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">0</span>eventlet<span class="token operator">==</span><span class="token number">0.19</span><span class="token punctuation">.</span><span class="token number">0</span>python<span class="token operator">-</span>socketio<span class="token operator">==</span><span class="token number">1.6</span><span class="token punctuation">.</span><span class="token number">1</span>numpy<span class="token operator">==</span><span class="token number">1.13</span><span class="token punctuation">.</span><span class="token number">1</span>Pillow<span class="token operator">==</span><span class="token number">2.2</span><span class="token punctuation">.</span><span class="token number">1</span>scipy<span class="token operator">==</span><span class="token number">0.19</span><span class="token punctuation">.</span><span class="token number">1</span>keras<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">8</span>tensorflow<span class="token operator">==</span><span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">0</span>h5py<span class="token operator">==</span><span class="token number">2.6</span><span class="token punctuation">.</span><span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以将这些依赖保存为一个txt文件，然后通过<code>pip install -r requirements.txt</code> 安装，这里如果网速不好的话，可以设置镜像源安装，比如添加ustc的镜像源，</p><pre class="line-numbers language-cpp"><code class="language-cpp">pip install <span class="token operator">-</span>r requirements<span class="token punctuation">.</span>txt <span class="token operator">-</span>i https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>ustc<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn<span class="token operator">/</span>pypi<span class="token operator">/</span>web<span class="token operator">/</span>simple<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通过摄像头识别水杯可以参考<a href="https://github.com/osrf/tensorflow_object_detector" target="_blank" rel="noopener">SSD_MobileNet</a>中的usb_cam_detector.launch和detect_ros.py文件。</p><h2 id="三、遥控四轮车"><a href="#三、遥控四轮车" class="headerlink" title="三、遥控四轮车"></a>三、遥控四轮车</h2><h3 id="3-1-思路"><a href="#3-1-思路" class="headerlink" title="3.1 思路"></a>3.1 思路</h3><p>物体的识别后会得到物体在图片中的中心点(x, y)和识别物体大小的矩形宽(w)和高(h)，我们可以借助(x, y)处于图片的什么区域对小车转向进行控制，而识别物体的矩形框的大小可以控制小车的前进后退。</p><h3 id="3-2-实现方式"><a href="#3-2-实现方式" class="headerlink" title="3.2 实现方式"></a>3.2 实现方式</h3><p>假设摄像机采集的图片分辨率为$W \times H$，则有小车的控制规则如下，</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">if</span> <span class="token punctuation">(</span> w <span class="token operator">></span> W<span class="token operator">/</span><span class="token number">2</span> <span class="token operator">and</span> h <span class="token operator">></span> H<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     小车前进<span class="token keyword">else</span><span class="token punctuation">:</span>    小车后退<span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">></span> W<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    小车右转<span class="token keyword">else</span><span class="token punctuation">:</span>    小车左转<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样就基本实现了通过识别物体的状态来遥控小车，控制小车的运行方式。</p><center><img width="500" height="300" src="http://suljaxm.com/7_cup_detector_control_car.png">基于检测水杯控制小车</center><h3 id="3-3-参考"><a href="#3-3-参考" class="headerlink" title="3.3 参考"></a>3.3 参考</h3><ul><li><p><a href="https://github.com/suljaxm/Turtle-Communication_ROS/blob/master/src/robot_vision/scripts/face_detector.py" target="_blank" rel="noopener">基于人脸检测</a></p></li><li><p><a href="https://github.com/suljaxm/Turtle-Communication_ROS/blob/master/src/tensorflow_object_detector/scripts/detect_ros.py" target="_blank" rel="noopener">基于水杯检测</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器人 </tag>
            
            <tag> XML </tag>
            
            <tag> Python </tag>
            
            <tag> DL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四轮车仿真平台搭建</title>
      <link href="/2019/08/20/ros/si-lun-che-fang-zhen-ping-tai-da-jian/"/>
      <url>/2019/08/20/ros/si-lun-che-fang-zhen-ping-tai-da-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="一、仿真模型创建"><a href="#一、仿真模型创建" class="headerlink" title="一、仿真模型创建"></a>一、仿真模型创建</h2><h3 id="1-1-link创建"><a href="#1-1-link创建" class="headerlink" title="1.1 link创建"></a>1.1 link创建</h3><p>link包含三大主要部分，分别是可视化的<code>&lt;visual&gt; .. &lt;/visual&gt;</code>，碰撞属性<code>&lt;collision&gt; ... &lt;/collision&gt;</code>  以及惯性参数<code>&lt;inertial&gt; ... &lt;inertial&gt;</code>。<br>以小车的车身为例，</p><pre class="line-numbers language-xml"><code class="language-xml">    <span class="token comment" spellcheck="true">&lt;!-- 可视化 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>visual</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> 0 0 0<span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>geometry</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>box</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.40 0.20 0.16<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>geometry</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>material</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>yellow<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>visual</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 碰撞属性 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collision</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> 0 0 0<span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>geometry</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>box</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.40 0.20 0.16<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>geometry</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>collision</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 惯性参数 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xacro:</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m<span class="token punctuation">"</span></span>   <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xacro:</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>r<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.06<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xacro:</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.025<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>inertial</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mass</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        &lt;inertia ixx="${2*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"            iyy="${m*(3*r*r+h*h)/12}" iyz = "0"            izz="${m*r*r/2}" />     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>inertial</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-gazebo标签"><a href="#1-2-gazebo标签" class="headerlink" title="1.2 gazebo标签"></a>1.2 gazebo标签</h3><p>gazebo工具用于小车的仿真，所以需要在link里面添加其标签。注意的是gazebo中的颜色要重新定义。</p><pre class="line-numbers language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>gazebo</span> <span class="token attr-name">reference</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>base_link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>material</span><span class="token punctuation">></span></span>Gazebo/Blue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>material</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>gazebo</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="1-3-传动装置"><a href="#1-3-传动装置" class="headerlink" title="1.3 传动装置"></a>1.3 传动装置</h3><p>为模型的joint处添加传动转置，主要是车轮和车身的连接处。</p><pre class="line-numbers language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transmission</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${prefix}_wheel_joint_trans<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>transmission_interface/SimpleTransmission<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>joint</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${prefix}_wheel_joint<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hardwareInterface</span><span class="token punctuation">></span></span>hardware_interface/VelocityJointInterface<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hardwareInterface</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>joint</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>actuator</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${prefix}_wheel_joint_motor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hardwareInterface</span><span class="token punctuation">></span></span>hardware_interface/VelocityJointInterface<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hardwareInterface</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mechanicalReduction</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mechanicalReduction</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>actuator</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transmission</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-4-控制器插件"><a href="#1-4-控制器插件" class="headerlink" title="1.4 控制器插件"></a>1.4 控制器插件</h3><p>因为是四轮驱动，所以选择<a href="http://gazebosim.org/tutorials?tut=ros_gzplugins&cat=connect_ros" target="_blank" rel="noopener">Skid Steering Drive</a>的模式。</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>gazebo</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>skid_steer_drive_controller<span class="token punctuation">"</span></span> <span class="token attr-name">filename</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>libgazebo_ros_skid_steer_drive.so<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>updateRate</span><span class="token punctuation">></span></span>100.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>updateRate</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>robotNamespace</span><span class="token punctuation">></span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>robotNamespace</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>leftFrontJoint</span><span class="token punctuation">></span></span>front_left_wheel_joint<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>leftFrontJoint</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rightFrontJoint</span><span class="token punctuation">></span></span>front_right_wheel_joint<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rightFrontJoint</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>leftRearJoint</span><span class="token punctuation">></span></span>back_left_wheel_joint<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>leftRearJoint</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rightRearJoint</span><span class="token punctuation">></span></span>back_right_wheel_joint<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rightRearJoint</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wheelSeparation</span><span class="token punctuation">></span></span>0.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>wheelSeparation</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wheelDiameter</span><span class="token punctuation">></span></span>0.215<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>wheelDiameter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>robotBaseFrame</span><span class="token punctuation">></span></span>base_link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>robotBaseFrame</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>torque</span><span class="token punctuation">></span></span>20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>torque</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>topicName</span><span class="token punctuation">></span></span>cmd_vel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>topicName</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>broadcastTF</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>broadcastTF</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>gazebo</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-5-模型测试"><a href="#1-5-模型测试" class="headerlink" title="1.5 模型测试"></a>1.5 模型测试</h3><p>最后将模型加载进gazebo空间，测试。</p><center><img width="800" height="450" src="http://suljaxm.com/4_4-wheel_vehicle.png">Figure 1 仿真四轮车</center><h2 id="二、传感器仿真"><a href="#二、传感器仿真" class="headerlink" title="二、传感器仿真"></a>二、传感器仿真</h2><p>通过仿真传感器，我们可以降低实验成本，并且高效地测试不同环境下的算法性能。以搭载相机和激光雷达的四轮车为例。</p><h3 id="2-1-相机"><a href="#2-1-相机" class="headerlink" title="2.1 相机"></a>2.1 相机</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- camera --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>gazebo</span> <span class="token attr-name">reference</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>camera_link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sensor</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>camera<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>camera1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update_rate</span><span class="token punctuation">></span></span>30.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update_rate</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>camera</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>head<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>horizontal_fov</span><span class="token punctuation">></span></span>1.3962634<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>horizontal_fov</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>width</span><span class="token punctuation">></span></span>800<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>width</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>height</span><span class="token punctuation">></span></span>800<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>height</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>format</span><span class="token punctuation">></span></span>R8G8B8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>format</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>clip</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>near</span><span class="token punctuation">></span></span>0.02<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>near</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>far</span><span class="token punctuation">></span></span>300<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>far</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>clip</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>noise</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>gaussian<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!-- Noise is sampled independently per pixel on each frame.                    That pixel's noise value is added to each of its color                    channels, which at that point lie in the range [0,1]. --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mean</span><span class="token punctuation">></span></span>0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mean</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stddev</span><span class="token punctuation">></span></span>0.007<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>stddev</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>noise</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>camera</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>camera_controller<span class="token punctuation">"</span></span> <span class="token attr-name">filename</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>libgazebo_ros_camera.so<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>alwaysOn</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>alwaysOn</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>updateRate</span><span class="token punctuation">></span></span>0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>updateRate</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cameraName</span><span class="token punctuation">></span></span>rrbot/camera1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cameraName</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>imageTopicName</span><span class="token punctuation">></span></span>image_raw<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>imageTopicName</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cameraInfoTopicName</span><span class="token punctuation">></span></span>camera_info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cameraInfoTopicName</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frameName</span><span class="token punctuation">></span></span>camera_link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>frameName</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hackBaseline</span><span class="token punctuation">></span></span>0.07<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hackBaseline</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>distortionK1</span><span class="token punctuation">></span></span>0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>distortionK1</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>distortionK2</span><span class="token punctuation">></span></span>0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>distortionK2</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>distortionK3</span><span class="token punctuation">></span></span>0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>distortionK3</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>distortionT1</span><span class="token punctuation">></span></span>0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>distortionT1</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>distortionT2</span><span class="token punctuation">></span></span>0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>distortionT2</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sensor</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>gazebo</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中<code>&lt;sensor&gt;... &lt;/sensor&gt;</code>是描述传感器的标签，内部包含类型type，参数，仿真插件等信息。以相机为例，传感器类型为camera， 在<code>&lt;camera&gt; .. &lt;/camera&gt;</code>中描述了相机的分辨率，编码格式，图像范围，噪音参数等信息。在<code>&lt;plugin&gt; ... &lt;/plugin&gt;</code>中加载了相机的仿真插件libgazebo_ros_camera.so，插件中设置了其命名空间，话题和参考坐标系。</p><h3 id="2-2-激光雷达"><a href="#2-2-激光雷达" class="headerlink" title="2.2 激光雷达"></a>2.2 激光雷达</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- laser --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>gazebo</span> <span class="token attr-name">reference</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>laser_link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sensor</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ray<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rplidar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pose</span><span class="token punctuation">></span></span>0 0 0 0 0 0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pose</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>visualize</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>visualize</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update_rate</span><span class="token punctuation">></span></span>5.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update_rate</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ray</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scan</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>horizontal</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>samples</span><span class="token punctuation">></span></span>360<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>samples</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resolution</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resolution</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>min_angle</span><span class="token punctuation">></span></span>-3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>min_angle</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>max_angle</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>max_angle</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>horizontal</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scan</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>range</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>min</span><span class="token punctuation">></span></span>0.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>min</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>max</span><span class="token punctuation">></span></span>6.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>max</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resolution</span><span class="token punctuation">></span></span>0.01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resolution</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>range</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>noise</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>gaussian<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!-- Noise parameters based on published spec for Hokuyo laser                    achieving "+-30mm" accuracy at range &lt; 10m.  A mean of 0.0m and                    stddev of 0.01m will put 99.7% of samples within 0.03m of the true                    reading. --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mean</span><span class="token punctuation">></span></span>0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mean</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stddev</span><span class="token punctuation">></span></span>0.01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>stddev</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>noise</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ray</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gazebo_rplidar<span class="token punctuation">"</span></span> <span class="token attr-name">filename</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>libgazebo_ros_laser.so<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>topicName</span><span class="token punctuation">></span></span>/scan<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>topicName</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frameName</span><span class="token punctuation">></span></span>laser_link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>frameName</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sensor</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>gazebo</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>&lt;sensor&gt;... &lt;/sensor&gt;</code>的表示形式与相机类似。在激光雷达中<code>&lt;ray&gt; ... &lt;/ray&gt;</code>中描述了其性能参数。在<code>&lt;plugin&gt; ... &lt;/plugin&gt;</code>中加载的仿真插件为libgazebo_ros_laser.so。</p><h3 id="2-3-其它传感器"><a href="#2-3-其它传感器" class="headerlink" title="2.3 其它传感器"></a>2.3 其它传感器</h3><p>Gazebo的传感器插件还有很多，比如Multicamera，Depth Camera，Openni Kinect，GPU Laser，Block Laser，F3D，Force，IMU等等，更详细的介绍可参考<a href="http://gazebosim.org/tutorials?tut=ros_gzplugins&cat=connect_ros#Tutorial:UsingGazebopluginswithROS" target="_blank" rel="noopener">官网</a>。</p><h3 id="2-4-模型测试"><a href="#2-4-模型测试" class="headerlink" title="2.4 模型测试"></a>2.4 模型测试</h3><p>搭载传感器后，使用gazebo工具进行仿真测试。</p><center><img width="800" height="450" src="http://suljaxm.com/4_car_with_sensors_gazebo.png">Figure 2 仿真车搭载相机和激光雷达</center><p>最后可以在rviz观察传感器的模拟数据。</p><center><img width="800" height="450" src="http://suljaxm.com/4_car_with_sensors_rviz.png">Figure 3  传感器数据显示</center><p><a href="https://github.com/suljaxm/Turtle-Communication_ROS" target="_blank" rel="noopener">参考代码</a></p>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器人 </tag>
            
            <tag> XML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>URDF和XACRO的区别</title>
      <link href="/2019/08/20/ros/urdf-he-xacro-de-qu-bie/"/>
      <url>/2019/08/20/ros/urdf-he-xacro-de-qu-bie/</url>
      
        <content type="html"><![CDATA[<h2 id="一、URDF"><a href="#一、URDF" class="headerlink" title="一、URDF"></a>一、URDF</h2><h3 id="1-1-缺点"><a href="#1-1-缺点" class="headerlink" title="1.1 缺点"></a>1.1 缺点</h3><ul><li>模型冗长，重复内容过多</li><li>参数修改麻烦，不便于二次开发</li><li>没有参数计算的功能</li></ul><p>例如一辆四轮汽车，在用URDF建模时，要重复创建4份车轮的代码，这里面只有轮子的位置参数是不同的，这种重复性增加了URDF开发的难度。</p><h3 id="1-2-URDF的缺陷展示"><a href="#1-2-URDF的缺陷展示" class="headerlink" title="1.2 URDF的缺陷展示"></a>1.2 URDF的缺陷展示</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--back wheel x=-0.1 y_l=-0.1 y_r=+0.1 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left_back_wheel_link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>visual</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.5707 0 0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>geometry</span><span class="token punctuation">></span></span>            &lt;cylinder radius="0.06" length = "0.025"/>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>geometry</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>material</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>white<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">rgba</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 1 0.9<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>material</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>visual</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>link</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>joint</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left_back_wheel_joint<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>continuous<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-0.1 -0.1 -0.08<span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>base_link<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>child</span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left_back_wheel_link<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>axis</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 1 0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>joint</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right_back_wheel_link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>visual</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.5707 0 0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>geometry</span><span class="token punctuation">></span></span>            &lt;cylinder radius="0.06" length = "0.025"/>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>geometry</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>material</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>white<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">rgba</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 1 0.9<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>material</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>visual</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>link</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>joint</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right_back_wheel_joint<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>continuous<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-0.1 0.1 -0.08<span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>base_link<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>child</span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right_back_wheel_link<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>axis</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 1 0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>joint</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每个车轮都用于两个标签参数<code>&lt;link&gt; ...  &lt;/link&gt;</code>和<code>&lt;joint&gt; ... &lt;/joint&gt;</code>，而不同车轮间的区别仅仅是名字和位置参数，所以当一个机器人有100个轮子时，代码的冗余程度是无法接受的。</p><h2 id="二、XACRO"><a href="#二、XACRO" class="headerlink" title="二、XACRO"></a>二、XACRO</h2><h3 id="2-1-优点"><a href="#2-1-优点" class="headerlink" title="2.1 优点"></a>2.1 优点</h3><p>针对URDF的缺点，XACRO借鉴了函数的思想，在精简模型代码方面提供了<strong>创建宏定义</strong>和<strong>文件包含</strong>，同时也提供了可编程接口，例如引入了<strong>常量</strong>，<strong>变量</strong>，<strong>数字计算</strong>，<strong>条件语句</strong>等功能。这些特性降低了模型的开发难度。</p><h3 id="2-2-模型精简效果"><a href="#2-2-模型精简效果" class="headerlink" title="2.2 模型精简效果"></a>2.2 模型精简效果</h3><pre class="line-numbers language-xml"><code class="language-xml">    <span class="token comment" spellcheck="true">&lt;!-- 常量定义 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xacro:</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>M_PI<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3.1415926<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>       <span class="token comment" spellcheck="true">&lt;!-- 车轮定义 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xacro:</span>macro</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wheel<span class="token punctuation">"</span></span> <span class="token attr-name">params</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prefix reflect orientation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>joint</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${prefix}_wheel_joint<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>continuous<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${orientation*wheel_joint_x} ${reflect*wheel_joint_y} ${-wheel_joint_z}<span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>base_link<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>child</span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${prefix}_wheel_link<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>axis</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 1 0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>joint</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${prefix}_wheel_link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>visual</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${M_PI/2} 0 0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>geometry</span><span class="token punctuation">></span></span>                    &lt;cylinder radius="${wheel_radius}" length = "${wheel_length}"/>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>geometry</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>material</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gray<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>visual</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>link</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">xacro:</span>macro</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wheel</span> <span class="token attr-name">prefix</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>back_left<span class="token punctuation">"</span></span>  <span class="token attr-name">reflect</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token attr-name">orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>     <span class="token comment" spellcheck="true">&lt;!-- 后左轮--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wheel</span> <span class="token attr-name">prefix</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>back_right<span class="token punctuation">"</span></span> <span class="token attr-name">reflect</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>  <span class="token attr-name">orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>     <span class="token comment" spellcheck="true">&lt;!-- 后右论--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用了<strong>XACRO</strong>属性后，可以定义常量·M_PI·，也可以定义变量·prefix·，·reflect·，·orientation·，以及对数字的计算<code>${M_PI/2}</code>，这些极大的降低了代码的重复性，最后两个车轮的定义也只需两行。这不仅仅简化了模型的开发，也提高了模块的可扩展性。</p>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器人 </tag>
            
            <tag> XML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>URDF建模</title>
      <link href="/2019/08/14/ros/urdf-jian-mo/"/>
      <url>/2019/08/14/ros/urdf-jian-mo/</url>
      
        <content type="html"><![CDATA[<h2 id="一、URDF介绍"><a href="#一、URDF介绍" class="headerlink" title="一、URDF介绍"></a>一、URDF介绍</h2><p><a href="http://wiki.ros.org/action/fullsearch/urdf?action=fullsearch&context=180&value=linkto%3A%22urdf%22" title="Click to do a full-text search for this title" target="_blank" rel="noopener">URDF</a>(统一机器人描述格式) 是ROS中重要的机器人描述格式。<strong>URDF</strong>的主要语言是 <a href="http://wiki.ros.org/urdf/XML" target="_blank" rel="noopener">XML</a>，包含 <a href="http://wiki.ros.org/urdf/XML/link" target="_blank" rel="noopener">link</a>，<a href="http://wiki.ros.org/urdf/XML/joint" target="_blank" rel="noopener">joint</a>，<a href="http://wiki.ros.org/urdf/XML/robot" target="_blank" rel="noopener">robot</a> 等描述信息。</p><h2 id="二、四轮车建模"><a href="#二、四轮车建模" class="headerlink" title="二、四轮车建模"></a>二、四轮车建模</h2><center><img width="400" height="300" src="http://suljaxm.com/3_car.png">四轮车</center><h3 id="2-1-汽车框架"><a href="#2-1-汽车框架" class="headerlink" title="2.1 汽车框架"></a>2.1 汽车框架</h3><p><code>&lt;robot name=&quot;mbot&quot;&gt; ... &lt;/robot&gt;</code> 是整个机器人的框架，所有模块的信息都必须在此框架范围内, 及将 <code>...</code> 替换成汽车主体。</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" ?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>robot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mbot<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token comment" spellcheck="true">&lt;!-- mbot robot links and joints and more --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>robot</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2-车身"><a href="#2-2-车身" class="headerlink" title="2.2 车身"></a>2.2 车身</h3><p>车身当作所有组件的坐标系，中心点为原点。</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>base_link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>visual</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> 0 0 0<span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>geometry</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>box</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.40 0.20 0.16<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>geometry</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>material</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>yellow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">rgba</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1 0.4 0 1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>material</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>visual</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>link</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2-车轮"><a href="#2-2-车轮" class="headerlink" title="2.2 车轮"></a>2.2 车轮</h3><p>总共四个轮子，每个轮子都有一个<strong>link</strong>和<strong>joint</strong>属性，与车身连接类型为<strong>continuous</strong>。</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left_back_wheel_link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>visual</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.5707 0 0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>geometry</span><span class="token punctuation">></span></span>            &lt;cylinder radius="0.06" length = "0.025"/>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>geometry</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>material</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>blue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">rgba</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 1 0.9<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>material</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>visual</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>link</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>joint</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left_back_wheel_joint<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>continuous<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-0.1 -0.1 -0.08<span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>base_link<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>child</span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left_back_wheel_link<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>axis</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 1 0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>joint</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-3-传感器"><a href="#2-3-传感器" class="headerlink" title="2.3 传感器"></a>2.3 传感器</h3><p>大多数传感器与车身的连接类型为<strong>fixed</strong>，相机(camera) 固定在车身头部。</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left_camera_link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>visual</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> 0 0 0 <span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>geometry</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>box</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.03 0.04 0.04<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>geometry</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>material</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>black<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">rgba</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0 0.95<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>material</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>visual</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>link</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>joint</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left_camera_joint<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fixed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.17 -0.05 0.10<span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>base_link<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>child</span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left_camera_link<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>joint</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>激光雷达(laser) 固定在车身中部</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>laser_link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>visual</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> 0 0 0 <span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>geometry</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cylinder</span> <span class="token attr-name">length</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.05<span class="token punctuation">"</span></span> <span class="token attr-name">radius</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.05<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>geometry</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>material</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>black<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>visual</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>link</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>joint</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>laser_joint<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fixed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0.105<span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>base_link<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>child</span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>laser_link<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>joint</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、模型整体结构分析"><a href="#三、模型整体结构分析" class="headerlink" title="三、模型整体结构分析"></a>三、模型整体结构分析</h2><p>使用 <strong>urdf_to_graphiz</strong> 工具查看模型 <strong>xxx.urdf</strong> 的整体结构。</p><pre class="line-numbers language-cpp"><code class="language-cpp">urdf_to_graphiz xxx<span class="token punctuation">.</span>urdf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><center><img width="600" height="300" src="http://suljaxm.com/3_urdf.png">urdf图</center>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 机器人 </tag>
            
            <tag> XML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS机器人的tf变换</title>
      <link href="/2019/08/09/ros/ros-ji-qi-ren-de-tf-bian-huan/"/>
      <url>/2019/08/09/ros/ros-ji-qi-ren-de-tf-bian-huan/</url>
      
        <content type="html"><![CDATA[<h2 id="一、ROS的TF功能包"><a href="#一、ROS的TF功能包" class="headerlink" title="一、ROS的TF功能包"></a>一、ROS的TF功能包</h2><p><strong>TF功能包</strong>，可以通过广播<strong>TF变换</strong>和<strong>监听TF变换</strong>获取如下坐标变换关系：</p><ul><li>机器人局部坐标系相对于全局坐标系的关系。</li><li>机器人夹取的物体相对于机器人中心坐标系的位置.</li><li>机器人中心坐标系相对于全局坐标系的位置。</li></ul><center><img width="400" height="300" src="http://suljaxm.com/2_robot.jpg">Robot 坐标系</center><h2 id="二、TF坐标变换"><a href="#二、TF坐标变换" class="headerlink" title="二、TF坐标变换"></a>二、TF坐标变换</h2><p>已知激光雷达和机器人底盘的坐标关系，广播并监听机器人的坐标变换，求解激光雷达数据在底盘坐标系下的坐标值。</p><center><img width="550" height="200" src="http://suljaxm.com/2_robot2.jpg">Car</center><h3 id="2-1-TF广播器"><a href="#2-1-TF广播器" class="headerlink" title="2.1 TF广播器"></a>2.1 TF广播器</h3><p>首先定义TF 广播器(<a href="http://docs.ros.org/jade/api/tf/html/c++/classtf_1_1TransformBroadcaster.html" target="_blank" rel="noopener">TransformBroadcaster</a>),</p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">// 创建tf的广播器</span><span class="token keyword">static</span> tf<span class="token operator">::</span>TransformBroadcaster br<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>接着创建坐标变换值(<strong>transform</strong>)，比如在这里的变换关系中，没有旋转变换，只有平移变换，所以四元数<strong>Quaternion</strong>可以为<code>(0,0,0,1)</code>， 而位移向量<strong>Vector3</strong>是<code>(0.1, 0.0, 0.2)</code>，位移的单位是米。</p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">// 初始化tf数据</span>tf<span class="token operator">::</span>Transform transform<span class="token punctuation">;</span>transform<span class="token punctuation">.</span><span class="token function">setOrigin</span><span class="token punctuation">(</span> tf<span class="token operator">::</span><span class="token function">Vector3</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>transform<span class="token punctuation">.</span><span class="token function">setRotation</span><span class="token punctuation">(</span> tf<span class="token operator">::</span><span class="token function">Quaternion</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>最后发布坐标变换(<strong>sendTransform</strong>)</p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">// 广播base_link与base_laser坐标系之间的tf数据</span>br<span class="token punctuation">.</span><span class="token function">sendTransform</span><span class="token punctuation">(</span>tf<span class="token operator">::</span><span class="token function">StampedTransform</span><span class="token punctuation">(</span>transform<span class="token punctuation">,</span> ros<span class="token operator">::</span>Time<span class="token operator">::</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"base_link"</span><span class="token punctuation">,</span> <span class="token string">"base_laser"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-2-完整代码-TF广播器"><a href="#2-2-完整代码-TF广播器" class="headerlink" title="2.2 完整代码(TF广播器)"></a>2.2 完整代码(TF广播器)</h3><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">/** * 该例程产生tf数据，并计算、发布base_laser的位置指令 */</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ros/ros.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;tf/transform_broadcaster.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 初始化ROS节点</span>    ros<span class="token operator">::</span><span class="token function">init</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token string">"robot_tf_broadcaster"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 订阅base_link的位置话题</span>    ros<span class="token operator">::</span>NodeHandle node<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建tf的广播器</span>    <span class="token keyword">static</span> tf<span class="token operator">::</span>TransformBroadcaster br<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 初始化tf数据</span>        tf<span class="token operator">::</span>Transform transform<span class="token punctuation">;</span>        transform<span class="token punctuation">.</span><span class="token function">setOrigin</span><span class="token punctuation">(</span> tf<span class="token operator">::</span><span class="token function">Vector3</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        transform<span class="token punctuation">.</span><span class="token function">setRotation</span><span class="token punctuation">(</span> tf<span class="token operator">::</span><span class="token function">Quaternion</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 广播base_link与base_laser坐标系之间的tf数据</span>        br<span class="token punctuation">.</span><span class="token function">sendTransform</span><span class="token punctuation">(</span>tf<span class="token operator">::</span><span class="token function">StampedTransform</span><span class="token punctuation">(</span>transform<span class="token punctuation">,</span> ros<span class="token operator">::</span>Time<span class="token operator">::</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"base_link"</span><span class="token punctuation">,</span> <span class="token string">"base_laser"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-3-TF监听器"><a href="#2-3-TF监听器" class="headerlink" title="2.3 TF监听器"></a>2.3 TF监听器</h3><p>首先定义一个TF监听器(<strong>TransformListener</strong>)</p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">// 创建tf的监听器</span>tf<span class="token operator">::</span>TransformListener listener<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>获取TF变换后进行坐标系变化，此时我们可以设置检测到的<strong>base_laser</strong>(<strong>laser_point</strong>)为<code>(0.3, 0.0, 0.0)</code>，然后就该检测信息，通过<strong>transformPoint</strong>转换到<strong>base_link</strong>(<strong>base_point</strong>)上的点。</p><pre class="line-numbers language-cpp"><code class="language-cpp">geometry_msgs<span class="token operator">::</span>PointStamped base_point<span class="token punctuation">;</span>listener<span class="token punctuation">.</span><span class="token function">transformPoint</span><span class="token punctuation">(</span><span class="token string">"base_link"</span><span class="token punctuation">,</span> laser_point<span class="token punctuation">,</span> base_point<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-4-完成代码-TF监听器"><a href="#2-4-完成代码-TF监听器" class="headerlink" title="2.4 完成代码(TF监听器)"></a>2.4 完成代码(TF监听器)</h3><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">/** * 该例程监听tf数据，并计算、发布base_laser的位置指令 */</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ros/ros.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;tf/transform_listener.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;geometry_msgs/PointStamped.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 初始化ROS节点</span>    ros<span class="token operator">::</span><span class="token function">init</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token string">"robot_tf_listener"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建节点句柄</span>    ros<span class="token operator">::</span>NodeHandle node<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建tf的监听器</span>    tf<span class="token operator">::</span>TransformListener listener<span class="token punctuation">;</span>    ros<span class="token operator">::</span>Rate <span class="token function">rate</span><span class="token punctuation">(</span><span class="token number">10.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//我们将在base_laser帧中创建一个要转换为base_link帧的点</span>        geometry_msgs<span class="token operator">::</span>PointStamped laser_point<span class="token punctuation">;</span>        laser_point<span class="token punctuation">.</span>header<span class="token punctuation">.</span>frame_id <span class="token operator">=</span> <span class="token string">"base_laser"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//我们将在我们的简单示例中使用最近可用的转换</span>        laser_point<span class="token punctuation">.</span>header<span class="token punctuation">.</span>stamp <span class="token operator">=</span> ros<span class="token operator">::</span><span class="token function">Time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//laser_point检测点获取</span>        laser_point<span class="token punctuation">.</span>point<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0.3</span><span class="token punctuation">;</span>        laser_point<span class="token punctuation">.</span>point<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>        laser_point<span class="token punctuation">.</span>point<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>        <span class="token keyword">try</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 等待获取监听信息base_link和base_laser</span>            listener<span class="token punctuation">.</span><span class="token function">waitForTransform</span><span class="token punctuation">(</span><span class="token string">"base_link"</span><span class="token punctuation">,</span> <span class="token string">"base_laser"</span><span class="token punctuation">,</span> ros<span class="token operator">::</span><span class="token function">Time</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ros<span class="token operator">::</span><span class="token function">Duration</span><span class="token punctuation">(</span><span class="token number">3.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            geometry_msgs<span class="token operator">::</span>PointStamped base_point<span class="token punctuation">;</span>            listener<span class="token punctuation">.</span><span class="token function">transformPoint</span><span class="token punctuation">(</span><span class="token string">"base_link"</span><span class="token punctuation">,</span> laser_point<span class="token punctuation">,</span> base_point<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">ROS_INFO</span><span class="token punctuation">(</span><span class="token string">"base_laser: (%.2f, %.2f. %.2f) -----> base_link: (%.2f, %.2f, %.2f) at time %.2f"</span><span class="token punctuation">,</span>                laser_point<span class="token punctuation">.</span>point<span class="token punctuation">.</span>x<span class="token punctuation">,</span> laser_point<span class="token punctuation">.</span>point<span class="token punctuation">.</span>y<span class="token punctuation">,</span> laser_point<span class="token punctuation">.</span>point<span class="token punctuation">.</span>z<span class="token punctuation">,</span>                base_point<span class="token punctuation">.</span>point<span class="token punctuation">.</span>x<span class="token punctuation">,</span> base_point<span class="token punctuation">.</span>point<span class="token punctuation">.</span>y<span class="token punctuation">,</span> base_point<span class="token punctuation">.</span>point<span class="token punctuation">.</span>z<span class="token punctuation">,</span> base_point<span class="token punctuation">.</span>header<span class="token punctuation">.</span>stamp<span class="token punctuation">.</span><span class="token function">toSec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">catch</span><span class="token punctuation">(</span>tf<span class="token operator">::</span>TransformException<span class="token operator">&amp;</span> ex<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">ROS_ERROR</span><span class="token punctuation">(</span><span class="token string">"Received an exception trying to transform a point from \"base_laser\" to \"base_link\": %s"</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span><span class="token function">what</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        rate<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、运行结果"><a href="#三、运行结果" class="headerlink" title="三、运行结果"></a>三、运行结果</h2><p>启动两个节点时，就可以在监听处获得base_laser和base_link的坐标关系了。<br>说明的是检测物体为世界坐标系，base_laser和base_link是局部坐标系。</p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token punctuation">[</span> INFO<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1565335443.030506273</span><span class="token punctuation">]</span><span class="token operator">:</span> base_laser<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token number">0.30</span><span class="token punctuation">,</span> <span class="token number">0.00</span><span class="token punctuation">.</span> <span class="token number">0.00</span><span class="token punctuation">)</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">></span> base_link<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token number">0.40</span><span class="token punctuation">,</span> <span class="token number">0.00</span><span class="token punctuation">,</span> <span class="token number">0.20</span><span class="token punctuation">)</span> at time <span class="token number">1565335443.00</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS通信(海龟模拟器)</title>
      <link href="/2019/07/29/ros/ros-tong-xin-hai-gui-mo-ni-qi/"/>
      <url>/2019/07/29/ros/ros-tong-xin-hai-gui-mo-ni-qi/</url>
      
        <content type="html"><![CDATA[<h2 id="一、发布指令"><a href="#一、发布指令" class="headerlink" title="一、发布指令"></a>一、发布指令</h2><h3 id="1-1-发布海龟速度指令，让海龟圆周运动"><a href="#1-1-发布海龟速度指令，让海龟圆周运动" class="headerlink" title="1.1 发布海龟速度指令，让海龟圆周运动"></a>1.1 发布海龟速度指令，让海龟圆周运动</h3><p>创建一个<strong>Publisher</strong>，发布名为<strong>turtle1/cmd_vel</strong>的<strong>topic</strong>，其消息类型为<strong>geometry_msgs::Twist</strong>，通过控制<strong>cmd_vel</strong>中<strong>linear</strong>下的<strong>x</strong>和<strong>angular</strong>下的<strong>z</strong>。</p><pre class="line-numbers language-cpp"><code class="language-cpp">geometry_msgs<span class="token operator">/</span>Vector3 linear  float64 x  float64 y  float64 zgeometry_msgs<span class="token operator">/</span>Vector3 angular  float64 x  float64 y  float64 z<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-参考代码"><a href="#1-2-参考代码" class="headerlink" title="1.2 参考代码"></a>1.2 参考代码</h3><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;sstream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"ros/ros.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"std_msgs/String.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"geometry_msgs/Twist.h"</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ROS节点初始化</span>    ros<span class="token operator">::</span><span class="token function">init</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token string">"turtle_publisher"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建节点句柄</span>    ros<span class="token operator">::</span>NodeHandle n<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建一个Publisher，发布名为turtle1/cmd_vel的topic，消息类型为geometry_msgs::Twist，传输空间大小1000</span>    ros<span class="token operator">::</span>Publisher chatter_pub <span class="token operator">=</span> n<span class="token punctuation">.</span>advertise<span class="token operator">&lt;</span>geometry_msgs<span class="token operator">::</span>Twist<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">"turtle1/cmd_vel"</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 设置循环的频率</span>    ros<span class="token operator">::</span>Rate <span class="token function">loop_rate</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>ros<span class="token operator">::</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 初始化geometry_msgs::Twist类型的消息</span>        geometry_msgs<span class="token operator">::</span>Twist Twist_msg<span class="token punctuation">;</span>        <span class="token keyword">float</span> linear_x<span class="token punctuation">,</span> linear_y<span class="token punctuation">,</span> angular_z<span class="token punctuation">;</span>        linear_x <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        linear_y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        angular_z <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        Twist_msg<span class="token punctuation">.</span>linear<span class="token punctuation">.</span>x <span class="token operator">=</span> linear_x<span class="token punctuation">;</span>        Twist_msg<span class="token punctuation">.</span>linear<span class="token punctuation">.</span>y <span class="token operator">=</span> linear_y<span class="token punctuation">;</span>        Twist_msg<span class="token punctuation">.</span>angular<span class="token punctuation">.</span>z <span class="token operator">=</span> angular_z<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 发布消息</span>        <span class="token function">ROS_INFO</span><span class="token punctuation">(</span><span class="token string">"I heard cmd_vel linear.x:[%f] linear.y:[%f] angular.z:[%f]"</span><span class="token punctuation">,</span>linear_x<span class="token punctuation">,</span> linear_y<span class="token punctuation">,</span> angular_z<span class="token punctuation">)</span><span class="token punctuation">;</span>        chatter_pub<span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span>Twist_msg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 按照循环频率延时</span>        loop_rate<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">++</span>count<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、定阅"><a href="#二、定阅" class="headerlink" title="二、定阅"></a>二、定阅</h2><h3 id="2-1-海龟的位置，并在终端中周期打印输出"><a href="#2-1-海龟的位置，并在终端中周期打印输出" class="headerlink" title="2.1 海龟的位置，并在终端中周期打印输出"></a>2.1 海龟的位置，并在终端中周期打印输出</h3><p>创建一个<strong>Subscriber</strong>，订阅名为<strong>turtle1/pose</strong>的<strong>topic</strong>，其消息类型为<strong>turtlesim::Pose</strong>，注册回调函数<strong>chatterCallback_pose</strong>，而输出<strong>turtle1/pose</strong>中<strong>x</strong>， <strong>y</strong>，<strong>theta</strong>就是海龟<strong>turtle1</strong>的位置。</p><pre class="line-numbers language-cpp"><code class="language-cpp">float32 xfloat32 yfloat32 thetafloat32 linear_velocityfloat32 angular_velocity<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2-参考代码："><a href="#2-2-参考代码：" class="headerlink" title="2.2 参考代码："></a>2.2 参考代码：</h3><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"ros/ros.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"std_msgs/String.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"turtlesim/Pose.h"</span></span><span class="token comment" spellcheck="true">// 接收到订阅的消息后，会进入消息回调函数</span><span class="token keyword">void</span> <span class="token function">chatterCallback_pose</span><span class="token punctuation">(</span><span class="token keyword">const</span> turtlesim<span class="token operator">::</span>Pose<span class="token operator">::</span>ConstPtr<span class="token operator">&amp;</span> Pose_msg<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 将接收到的消息打印出来</span>    <span class="token keyword">float</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> theta<span class="token punctuation">;</span>    x<span class="token operator">=</span>Pose_msg<span class="token operator">-</span><span class="token operator">></span>x<span class="token punctuation">;</span>    y<span class="token operator">=</span>Pose_msg<span class="token operator">-</span><span class="token operator">></span>y<span class="token punctuation">;</span>    theta<span class="token operator">=</span>Pose_msg<span class="token operator">-</span><span class="token operator">></span>theta<span class="token punctuation">;</span>    <span class="token function">ROS_INFO</span><span class="token punctuation">(</span><span class="token string">"I heard pose x:[%f] y:[%f] z:[%f]"</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> theta<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 初始化ROS节点</span>    ros<span class="token operator">::</span><span class="token function">init</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token string">"turtle_subscriber"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建节点句柄     </span>    ros<span class="token operator">::</span>NodeHandle n<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建一个Subscriber，订阅名为turtle1/pose的topic，注册回调函数chatterCallback_pose</span>    ros<span class="token operator">::</span>Subscriber sub <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">"turtle1/pose"</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> chatterCallback_pose<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 循环等待回调函数</span>    ros<span class="token operator">::</span><span class="token function">spin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、-创建新服务"><a href="#三、-创建新服务" class="headerlink" title="三、 创建新服务"></a>三、 创建新服务</h2><h3 id="3-1-创建新海龟的服务，在仿真器中产生一只新海龟"><a href="#3-1-创建新海龟的服务，在仿真器中产生一只新海龟" class="headerlink" title="3.1 创建新海龟的服务，在仿真器中产生一只新海龟"></a>3.1 创建新海龟的服务，在仿真器中产生一只新海龟</h3><p>创建一个<strong>client</strong>，<strong>service</strong>消息类型是<strong>turtlesim::Spawn</strong>，向服务端传入设置好的海龟位置和名称(<strong>x y theta name</strong>)。</p><pre class="line-numbers language-cpp"><code class="language-cpp">Node<span class="token operator">:</span> <span class="token operator">/</span>turtlesimURI<span class="token operator">:</span> rosrpc<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">10.0</span><span class="token punctuation">.</span><span class="token number">2.15</span><span class="token operator">:</span><span class="token number">60487</span>Type<span class="token operator">:</span> turtlesim<span class="token operator">/</span>SpawnArgs<span class="token operator">:</span> x y theta name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2-参考代码："><a href="#3-2-参考代码：" class="headerlink" title="3.2 参考代码："></a>3.2 参考代码：</h3><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"ros/ros.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"std_srvs/SetBool.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"turtlesim/Spawn.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span>             </span><span class="token comment" spellcheck="true">/* srand, rand */</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;time.h></span>               </span><span class="token comment" spellcheck="true">/* time */</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ROS节点初始化</span>    ros<span class="token operator">::</span><span class="token function">init</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token string">"turtle_client"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// set argv[1] not null</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">ROS_INFO</span><span class="token punctuation">(</span><span class="token string">"argv: %s"</span><span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建节点句柄</span>    ros<span class="token operator">::</span>NodeHandle n<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建一个client，service消息类型是turtlesim::Spawn  turtlesim/Spawn</span>    ros<span class="token operator">::</span>service<span class="token operator">::</span><span class="token function">waitForService</span><span class="token punctuation">(</span><span class="token string">"/spawn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ros<span class="token operator">::</span>ServiceClient client <span class="token operator">=</span> n<span class="token punctuation">.</span>serviceClient<span class="token operator">&lt;</span>turtlesim<span class="token operator">::</span>Spawn<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">"/spawn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建turtlesim::Spawn类型的service消息</span>    turtlesim<span class="token operator">::</span>Spawn srv<span class="token punctuation">;</span>    <span class="token function">srand</span> <span class="token punctuation">(</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    srv<span class="token punctuation">.</span>request<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>    srv<span class="token punctuation">.</span>request<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>    srv<span class="token punctuation">.</span>request<span class="token punctuation">.</span>theta <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">10</span><span class="token operator">*</span><span class="token number">0.5</span><span class="token punctuation">;</span>    srv<span class="token punctuation">.</span>request<span class="token punctuation">.</span>name <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 发布service请求，等待应答结果</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>srv<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">ROS_INFO</span><span class="token punctuation">(</span><span class="token string">"Response : ok"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token punctuation">{</span>        <span class="token function">ROS_ERROR</span><span class="token punctuation">(</span><span class="token string">"Failed to call service spawn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、控制"><a href="#四、控制" class="headerlink" title="四、控制"></a>四、控制</h2><h3 id="控制特定海龟的速度大小"><a href="#控制特定海龟的速度大小" class="headerlink" title="控制特定海龟的速度大小"></a>控制特定海龟的速度大小</h3><p>这里和1中的实现方式相似，可以在终端输入控制的参数<strong>argv</strong>，然后由这些参数控制海龟状态。</p><p>ps:有时候在编译时会出现<strong>warning:  Clock skew detected.  Your build may be incomplete.</strong>这样的警告。这是时钟同步问题，可以</p><pre class="line-numbers language-cpp"><code class="language-cpp">find <span class="token punctuation">.</span> <span class="token operator">-</span>type f <span class="token operator">|</span> xargs <span class="token operator">-</span>n <span class="token number">5</span> touch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS初识</title>
      <link href="/2019/07/24/ros/ros-chu-shi/"/>
      <url>/2019/07/24/ros/ros-chu-shi/</url>
      
        <content type="html"><![CDATA[<h2 id="一、启动"><a href="#一、启动" class="headerlink" title="一、启动"></a>一、启动</h2><h3 id="1-1核心服务点"><a href="#1-1核心服务点" class="headerlink" title="1.1核心服务点"></a>1.1核心服务点</h3><pre class="line-numbers language-cpp"><code class="language-cpp">roscore       #核心服务点<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-2仿真节点"><a href="#1-2仿真节点" class="headerlink" title="1.2仿真节点"></a>1.2仿真节点</h3><pre class="line-numbers language-cpp"><code class="language-cpp">rosrun turtlesim turtlesim_node   #仿真节点<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><center><img width="350" height="250" src="http://suljaxm.com/1_node.png">Figure 1. node</center>  <h2 id="二、创建"><a href="#二、创建" class="headerlink" title="二、创建"></a>二、创建</h2><h3 id="新的海龟turtle3"><a href="#新的海龟turtle3" class="headerlink" title="新的海龟turtle3"></a>新的海龟turtle3</h3><pre class="line-numbers language-cpp"><code class="language-cpp">rosservice call <span class="token operator">/</span>spawn "x<span class="token operator">:</span> <span class="token number">5.0</span>y<span class="token operator">:</span> <span class="token number">0.0</span>theta<span class="token operator">:</span> <span class="token number">0.5</span>name<span class="token operator">:</span> <span class="token string">'turtle3'</span>"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、控制"><a href="#三、控制" class="headerlink" title="三、控制"></a>三、控制</h2><h3 id="海龟turtle3原地做圆周运动"><a href="#海龟turtle3原地做圆周运动" class="headerlink" title="海龟turtle3原地做圆周运动"></a>海龟turtle3原地做圆周运动</h3><pre class="line-numbers language-cpp"><code class="language-cpp">rostopic pub <span class="token operator">-</span>r <span class="token number">10</span> <span class="token operator">/</span>turtle3<span class="token operator">/</span>cmd_vel geometry_msgs<span class="token operator">/</span>Twist "linear<span class="token operator">:</span>  x<span class="token operator">:</span> <span class="token number">0.5</span>  y<span class="token operator">:</span> <span class="token number">0.0</span>  z<span class="token operator">:</span> <span class="token number">0.0</span>angular<span class="token operator">:</span>  x<span class="token operator">:</span> <span class="token number">0.0</span>  y<span class="token operator">:</span> <span class="token number">0.0</span>  z<span class="token operator">:</span> <span class="token number">1.0</span>"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><center><img width="350" height="250" src="http://suljaxm.com/1_result.png">Figure 2. result</center>  <h2 id="四、计算图"><a href="#四、计算图" class="headerlink" title="四、计算图"></a>四、计算图</h2><h3 id="查看海龟仿真系统对应的计算图"><a href="#查看海龟仿真系统对应的计算图" class="headerlink" title="查看海龟仿真系统对应的计算图"></a>查看海龟仿真系统对应的计算图</h3><pre class="line-numbers language-cpp"><code class="language-cpp">rqt_graph<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><center><img width="450" height="250" src="http://suljaxm.com/1_topic%E5%8F%AF%E8%A7%86%E5%8C%96.png">Figure 3. topic可视化</center>  <h2 id="五、信息可视化"><a href="#五、信息可视化" class="headerlink" title="五、信息可视化"></a>五、信息可视化</h2><h3 id="5-1查看-turtle2-pose的可视化信息"><a href="#5-1查看-turtle2-pose的可视化信息" class="headerlink" title="5.1查看 /turtle2/pose的可视化信息"></a>5.1查看 /turtle2/pose的可视化信息</h3><pre class="line-numbers language-cpp"><code class="language-cpp">rqt_plot<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><center><img width="450" height="250" src="http://suljaxm.com/1_%E8%AE%A1%E7%AE%97%E5%9B%BE.png">Figure 4. 计算图</center>  <h3 id="5-2查看-turtle2-pose的实时信息"><a href="#5-2查看-turtle2-pose的实时信息" class="headerlink" title="5.2查看 /turtle2/pose的实时信息"></a>5.2查看 /turtle2/pose的实时信息</h3><pre class="line-numbers language-cpp"><code class="language-cpp">rostopic echo <span class="token operator">/</span>turtle2<span class="token operator">/</span>pose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>车辆行为克隆</title>
      <link href="/2019/06/05/wu-ren-jia-shi/behavioral-cloning/"/>
      <url>/2019/06/05/wu-ren-jia-shi/behavioral-cloning/</url>
      
        <content type="html"><![CDATA[<p>网络搭建训练步骤：</p><ul><li>数据收集</li><li>网络搭建</li><li>网络训练</li><li>模型测试</li></ul><hr><h2 id="一、-总体思路"><a href="#一、-总体思路" class="headerlink" title="一、 总体思路"></a>一、 总体思路</h2><h3 id="1-1-模型体系结构"><a href="#1-1-模型体系结构" class="headerlink" title="1.1 模型体系结构"></a>1.1 模型体系结构</h3><p>我的网络模型中的卷积层，前三层卷积神经网络的<code>stride</code>为${2}\times{2} $，<code>kernel</code>为${5}\times{5} $，而后两层卷积神经网络的<code>stride</code>为${1}\times{1} $，<code>kernel</code>为${3}\times{3}$。我跟随五个卷积层和三个完全连接的层，得到一个输出控制值，即反向转弯半径。这参考了NVIDIA在16年发表的论文“<a href="https://images.nvidia.com/content/tegra/automotive/images/2016/solutions/pdf/end-to-end-dl-using-px.pdf" target="_blank" rel="noopener">End to End Learning for Self-Driving Cars</a>”，本文提出了一种将单个前置摄像头的原始像素直接映射到转向指令的网络。所以这篇论文与这个项目的目的是一致的。</p><p>NVIDIA的工作是基于卷积的设计。根据作者的观点，他们设计了卷积层作为特征提取器，而全连接层负责控制转向角。但是，正如他们所指出的，由于系统端到端的特性，使得在网络中分离出特性提取器和控制器的位置是极为困难的。</p><h3 id="1-2-防止模型过度拟合"><a href="#1-2-防止模型过度拟合" class="headerlink" title="1.2 防止模型过度拟合"></a>1.2 防止模型过度拟合</h3><p>该模型包含池化层，以减少过度拟合，在不同的数据集上对模型进行训练和验证，以保证模型不过度拟合。<br>最后对模型进行了测试，通过在模拟器上运行该模型，并确保车辆能够保持在轨道上。</p><h3 id="1-3-优化器"><a href="#1-3-优化器" class="headerlink" title="1.3 优化器"></a>1.3 优化器</h3><p>该模型使用adam优化器，因此学习速度不是手动调优的</p><pre class="line-numbers language-python"><code class="language-python">model<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>loss<span class="token operator">=</span><span class="token string">'mse'</span><span class="token punctuation">,</span> optimizer<span class="token operator">=</span><span class="token string">'adam'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-4-训练数据"><a href="#1-4-训练数据" class="headerlink" title="1.4 训练数据"></a>1.4 训练数据</h3><p>选择训练数据以保持车辆在道路上行驶。我使用了中心车道驾驶的组合，从道路左右两侧的转向角由于<strong>校正</strong>恢复，<strong>校正</strong>就是将原本不是处在中心的相机通过对角度进行 $\pm {correction}$，最后等效于中心相机的效果，这算是数据增强的一种方式。</p><pre class="line-numbers language-python"><code class="language-python">correction <span class="token operator">=</span> <span class="token number">0.2</span> <span class="token comment" spellcheck="true"># this is a parameter to tune</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="二、模型架构和培训策略"><a href="#二、模型架构和培训策略" class="headerlink" title="二、模型架构和培训策略"></a>二、模型架构和培训策略</h2><h3 id="2-1-方案设计"><a href="#2-1-方案设计" class="headerlink" title="2.1 方案设计"></a>2.1 方案设计</h3><p>推导模型体系结构的总体策略是通过摄像机图像来控制汽车的转向角。</p><p>我的第一步是使用卷积神经网络模型类似于<em>LeNet</em>。我认为这个模型可能是合适的，因为它是一个成熟的分类网络。<br>之后为了衡量模型运行得有好坏，我将图像和转向角数据分割成一个训练和验证集。我发现我的第一个模型在训练集上有一个低的均方误差，但在验证集上有一个高的均方误差。这意味着模型过度拟合。为了克服过拟合，我对模型进行了修改，使网络能够减少过拟合。然后我添加了dropout图层，但是效果不是很理想。之后，我参考了NVIDIA的工作。</p><p>最后在模拟器上测试，看看小车在轨道上的行驶情况。当小车经过一些特定的地方时，会脱离轨道，为了改善这些情况下的驾驶行为，我打乱了数据集的训练顺序，增加了批次的数量。在经过这个步骤后，车辆能够在不离开道路的情况下自动绕轨道行驶。</p><h3 id="2-2-网络结构"><a href="#2-2-网络结构" class="headerlink" title="2.2 网络结构"></a>2.2 网络结构</h3><p>最终的模型结构由一个卷积神经网络组成，该网络信息如下，</p><table><thead><tr><th align="center">Layer</th><th align="center">Description</th></tr></thead><tbody><tr><td align="center">Input</td><td align="center">90x320x3 RGB image</td></tr><tr><td align="center">Convolution 5x5(RELU)</td><td align="center">2x2 stride, same padding, outputs 45x160x24</td></tr><tr><td align="center">Max pooling</td><td align="center">1x1 stride,  outputs 44x159x24</td></tr><tr><td align="center">Convolution 5x5(RELU)</td><td align="center">2x2 stride, same padding, outputs 22x80x36</td></tr><tr><td align="center">Max pooling</td><td align="center">1x1 stride,  outputs 21x79x36</td></tr><tr><td align="center">Convolution 5x5(RELU)</td><td align="center">2x2 stride, same padding, outputs 11x40x48</td></tr><tr><td align="center">Max pooling</td><td align="center">1x1 stride,  outputs 10x39x48</td></tr><tr><td align="center">Convolution 3x3(RELU)</td><td align="center">1x1 stride, same padding, outputs 10x39x64</td></tr><tr><td align="center">Max pooling</td><td align="center">1x1 stride,  outputs 9x38x48</td></tr><tr><td align="center">Convolution 3x3(RELU)</td><td align="center">1x1 stride, same padding, outputs 9x38x64</td></tr><tr><td align="center">Max pooling</td><td align="center">1x1 stride,  outputs 8x37x48</td></tr><tr><td align="center">Fully connected(RELU)</td><td align="center">inputs 18944, outputs 1164</td></tr><tr><td align="center">Fully connected(RELU)</td><td align="center">inputs 1164, outputs 100</td></tr><tr><td align="center">Fully connected(RELU)</td><td align="center">inputs 100, outputs 50</td></tr><tr><td align="center">Fully connected(RELU)</td><td align="center">inputs 50, outputs 10</td></tr><tr><td align="center">Fully connected</td><td align="center">inputs 10, outputs 1</td></tr></tbody></table><p>起初，我采用了dropout策略，发现容易欠拟合，模型不容易收敛，所以我选择了<code>step</code>为${1}\times{1} $的pooling层。同时，利用步幅为${1}\times{1} $的卷积，尽可能多地保留预测信息。<br>下面是该网络结构的可视化。</p><p><img src="http://suljaxm.com/6_Net.png" alt="Figure 1 网络" title="Model Visualization"></p><h3 id="2-3-网络训练与测试"><a href="#2-3-网络训练与测试" class="headerlink" title="2.3 网络训练与测试"></a>2.3 网络训练与测试</h3><p>为了捕捉良好的驾驶行为，我从互联网上下载了相关的 <a href="https://d17h27t6h515a5.cloudfront.net/topher/2016/December/584f6edd_data/data.zip" target="_blank" rel="noopener">数据集</a>。下面是一个中心车道驾驶的例子:</p><p><img src="http://suljaxm.com/6_center_01383082.jpg" alt="Figure 2 训练图片" title="Grayscaling"></p><p>由于模拟器会同时会为左右摄像头保存图像，于是我将左右摄像头采集的数据，经过转向角由于<strong>校正</strong>，等效于中心相机的数据。</p><p> <img src="http://suljaxm.com/6_right_03383082.jpg" alt="Figure 3.1 转向角=0.3383082" title="Recovery Image_right"> <img src="http://suljaxm.com/6_center_01383082.jpg" alt="Figure 3.2 转向角=0.1383082" title="Grayscaling"> <img src="http://suljaxm.com/6_left_f01383082.jpg" alt="Figure 3.3 转向角=-0.1383082" title="Recovery Image_left"> </p><p>为了扩充数据，我还翻转了图像和角度，认为这样可以提高网络预测的稳定性。例如，下面是一个已经翻转的图像。</p><p><img src="http://suljaxm.com/6_center_01383082.jpg" alt="Figure 4.1 原图片" title="Grayscaling"> <img src="http://suljaxm.com/6_center_image_flipped.jpg" alt="Figure 4.2 翻转图片" title="Flipped Image"></p><p>不过，并不是所有这些像素都包含有用的信息。在上面的图像中，图像的顶部部分捕捉树木、山丘和天空，底部部分捕捉汽车的引擎盖。我使用<code>Cropping2D</code>裁剪图像。例如，下面是一个经过裁剪的图像。</p><p><img src="http://suljaxm.com/6_center_01383082.jpg" alt="Figure 5.1 原图片" title="Grayscaling"> <img src="http://suljaxm.com/6_center_image_cropped.jpg" alt="Figure5.2 裁剪图片" title="Cropped Image"></p><p>最后，我随机打乱数据集，将20%的数据放入验证集。</p><p>我使用这些训练数据来训练模型。验证集帮助确定模型是否超过或低于拟合。理想的迭代数是10，可以通过可视化的损失来说明。</p><p><img src="http://suljaxm.com/6_result.png" alt="Figure 6 损失曲线" title="Result Image"></p><p>我使用了adam优化器，因此不需要手动训练学习率。</p><h2 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h2><p>车辆行为克隆网络中需要调整的参数是</p><ul><li><strong>batch_size=32</strong>, </li><li><strong>correction = 0.2</strong>, </li><li><strong>cropping=((50,20), (0,0))</strong></li><li><strong>train_test_split(samples, test_size=0.2)</strong></li></ul><p>此外，数据集的在训练时需要做随机处理，而且训练数据越多，训练效果越好。</p><p><a href="https://github.com/suljaxm/CarND-Behavioral-Cloning" target="_blank" rel="noopener">代码参考</a></p>]]></content>
      
      
      <categories>
          
          <category> 无人驾驶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> DL </tag>
            
            <tag> 无人车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>车道线检测</title>
      <link href="/2019/05/16/wu-ren-jia-shi/advanced-lane-finding/"/>
      <url>/2019/05/16/wu-ren-jia-shi/advanced-lane-finding/</url>
      
        <content type="html"><![CDATA[<p>检测步骤：</p><ul><li>相机标定</li><li>图片失真校正</li><li>图像阈值化</li><li>透视变换</li><li>检测车道像素并拟合边界</li><li>计算车道的曲率和车辆相对位置</li><li>车道边界弯曲回原始图像</li></ul><hr><h2 id="一、相机标定"><a href="#一、相机标定" class="headerlink" title="一、相机标定"></a>一、相机标定</h2><h3 id="1-1-角点检测"><a href="#1-1-角点检测" class="headerlink" title="1.1 角点检测"></a>1.1 角点检测</h3><p>我从准备<code>object points</code>开始，它将是世界棋盘角落的(x, y, z)坐标。这里我假设棋盘固定在z=0的(x, y)平面上，这样每个校准图像的目标点都是相同的。因此<code>objp</code>只是一个复制的坐标数组，每当我成功地检测到测试图像中的所有棋盘角时，<code>objpoints</code>将附加一个它的副本。<code>imgpoints</code>将与(x, y)像素位置的每一个角落在图像平面与每一个成功的棋盘检测。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># prepare object points, like (0,0,0), (1,0,0), (2,0,0) ....,(6,5,0)</span>objp <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token operator">*</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>objp<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>mgrid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">.</span>T<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># Arrays to store object points and image points from all the images.</span>objpoints <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># 3d points in real world space</span>imgpoints <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># 2d points in image plane.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中<code>imgpoints</code>的获得，通过<code>cv2.findChessboardCorners()</code>函数。</p><h3 id="1-2-标定"><a href="#1-2-标定" class="headerlink" title="1.2 标定"></a>1.2 标定</h3><p>然后，我使用输出<code>objpoints</code>和<code>imgpoints</code>使用<code>cv2.calibrateCamera()</code>函数计算相机校准和失真系数。我使用<code>cv2. undistort()</code>函数对测试图像进行失真校正，</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Test undistortion on an image</span>img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./calibration.jpg'</span><span class="token punctuation">)</span>img_size <span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># Do camera calibration given object points and image points</span>ret<span class="token punctuation">,</span> mtx<span class="token punctuation">,</span> dist<span class="token punctuation">,</span> rvecs<span class="token punctuation">,</span> tvecs <span class="token operator">=</span> cv2<span class="token punctuation">.</span>calibrateCamera<span class="token punctuation">(</span>objpoints<span class="token punctuation">,</span> imgpoints<span class="token punctuation">,</span> img_size<span class="token punctuation">,</span>None<span class="token punctuation">,</span>None<span class="token punctuation">)</span>dst <span class="token operator">=</span> cv2<span class="token punctuation">.</span>undistort<span class="token punctuation">(</span>img<span class="token punctuation">,</span> mtx<span class="token punctuation">,</span> dist<span class="token punctuation">,</span> None<span class="token punctuation">,</span> mtx<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到如下结果:</p><p><img src="http://suljaxm.com/5_undistorted.png" alt="Figure 1 去畸变" title="Undistorted"></p><h2 id="二、图片的Pipeline"><a href="#二、图片的Pipeline" class="headerlink" title="二、图片的Pipeline"></a>二、图片的Pipeline</h2><h3 id="2-1-图片获取"><a href="#2-1-图片获取" class="headerlink" title="2.1 图片获取"></a>2.1 图片获取</h3><p>将一张原始图片通过之前标定的参数进行矫正，再对矫正后的图片进行余下操作，矫正的函数为<code>cv2.undistort()</code>，结果如<code>Figure 2</code>所示，</p><p><img src="http://suljaxm.com/5_undistorted_lane.png" alt="Figure 2 车道线矫正" title="Road Transformed"></p><h3 id="2-2-图像阈值化"><a href="#2-2-图像阈值化" class="headerlink" title="2.2 图像阈值化"></a>2.2 图像阈值化</h3><p>我使用颜色和梯度阈值的组合来生成一个二进制图像。下面是这个步骤的输出示例。我使用<code>binary_select()</code>函数对测试图像应用了颜色变换和渐变，并得到了这个结果。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Define a function that thresholds the S-channel of HLS</span><span class="token keyword">def</span> <span class="token function">binary_select</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> s_thresh<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">170</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sx_thresh<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    hls <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>image<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_RGB2HLS<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#Convert to HLS color space</span>    s_channel <span class="token operator">=</span> hls<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#Apply a threshold to the S channel</span>    <span class="token comment" spellcheck="true"># Threshold color channel</span>    s_binary <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros_like<span class="token punctuation">(</span>s_channel<span class="token punctuation">)</span>    s_binary<span class="token punctuation">[</span><span class="token punctuation">(</span>s_channel <span class="token operator">>=</span> s_thresh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>s_channel <span class="token operator">&lt;=</span> s_thresh<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">255</span>    <span class="token comment" spellcheck="true"># Sobel x</span>    sobelx <span class="token operator">=</span> cv2<span class="token punctuation">.</span>Sobel<span class="token punctuation">(</span>s_channel<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>CV_64F<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># Take the derivative in x</span>    abs_sobelx <span class="token operator">=</span> np<span class="token punctuation">.</span>absolute<span class="token punctuation">(</span>sobelx<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># Absolute x derivative to accentuate lines away from horizontal</span>    scaled_sobel <span class="token operator">=</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">(</span><span class="token number">255</span><span class="token operator">*</span>abs_sobelx<span class="token operator">/</span>np<span class="token punctuation">.</span>max<span class="token punctuation">(</span>abs_sobelx<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># Threshold x gradient</span>    sxbinary <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros_like<span class="token punctuation">(</span>scaled_sobel<span class="token punctuation">)</span>    sxbinary<span class="token punctuation">[</span><span class="token punctuation">(</span>scaled_sobel <span class="token operator">>=</span> sx_thresh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>scaled_sobel <span class="token operator">&lt;=</span> sx_thresh<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">255</span>    <span class="token comment" spellcheck="true">#the threshold result of combine s_binary and sxbinary</span>    binary_output <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros_like<span class="token punctuation">(</span>s_channel<span class="token punctuation">)</span>    binary_output<span class="token punctuation">[</span><span class="token punctuation">(</span>s_binary <span class="token operator">>=</span> <span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>sxbinary <span class="token operator">>=</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">255</span>    <span class="token keyword">return</span> s_channel<span class="token punctuation">,</span> s_binary<span class="token punctuation">,</span> sxbinary<span class="token punctuation">,</span> binary_output <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://suljaxm.com/5_Binary.png" alt="Figure 3 阈值化效果" title="Binary Example"></p><h3 id="2-3-透视变换"><a href="#2-3-透视变换" class="headerlink" title="2.3 透视变换"></a>2.3 透视变换</h3><p>我的透视图转换代码包含一个名为<code>birds_eye_warp()</code>的函数。函数<code>birds_eye_warp()</code>接收图像(<code>img</code>)、Source(<code>src</code>)和 Destination(<code>dst</code>)作为输入。 其中Source(src)为图片上的像素坐标，而Destination(dst)是实际场景的比例关系估算获得。</p><table><thead><tr><th align="center">Source(src)</th><th align="center">Destination(dst)</th></tr></thead><tbody><tr><td align="center">575,464</td><td align="center">150,0</td></tr><tr><td align="center">707,464</td><td align="center">1130,0</td></tr><tr><td align="center">1049,682</td><td align="center">1130,720</td></tr><tr><td align="center">258,682</td><td align="center">150,720</td></tr></tbody></table><p>接着通过函数<code>cv2.getPerspectiveTransform()</code>获得Source点和Destination的变换关系，</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># the function of "birds-eye view"</span><span class="token keyword">def</span> <span class="token function">birds_eye_warp</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> src<span class="token punctuation">,</span> dst<span class="token punctuation">)</span><span class="token punctuation">:</span>     h<span class="token punctuation">,</span>w <span class="token operator">=</span> img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>    M <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getPerspectiveTransform<span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">)</span>    Minv <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getPerspectiveTransform<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> src<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># use cv2.warpPerspective() to warp your image to a top-down view</span>    warped <span class="token operator">=</span> cv2<span class="token punctuation">.</span>warpPerspective<span class="token punctuation">(</span>img<span class="token punctuation">,</span> M<span class="token punctuation">,</span> <span class="token punctuation">(</span>w<span class="token punctuation">,</span>h<span class="token punctuation">)</span><span class="token punctuation">,</span> flags<span class="token operator">=</span>cv2<span class="token punctuation">.</span>INTER_LINEAR<span class="token punctuation">)</span>    <span class="token keyword">return</span> warped<span class="token punctuation">,</span> M<span class="token punctuation">,</span> Minv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后，我将<code>src</code>和<code>dst</code>点绘制到测试图像及其翘曲的对应图像上，验证了透视图转换如预期的那样工作，以及这些车道线经过透视图转换后看起来是平行的。</p><p><img src="http://suljaxm.com/5_warped.png" alt="Figure 4 鸟瞰图" title="Warp Example"></p><h3 id="2-4-拟合车道线像素"><a href="#2-4-拟合车道线像素" class="headerlink" title="2.4 拟合车道线像素"></a>2.4 拟合车道线像素</h3><p>首先，通过代码<code>hist()</code>函数查找属于车道线的像素。我选择了两个最强的峰作为初始车道线的起点。其次，使用<code>Sliding Windows</code>策略，为每段选择车道线像素。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">hist</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">#img是归一化处理的单通道图片</span>    <span class="token comment" spellcheck="true"># TO-DO: Grab only the bottom half of the image</span>    <span class="token comment" spellcheck="true"># Lane lines are likely to be mostly vertical nearest to the car</span>    bottom_half <span class="token operator">=</span> None    bottom_half <span class="token operator">=</span> img<span class="token punctuation">[</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">//</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># TO-DO: Sum across image pixels vertically - make sure to set `axis`</span>    <span class="token comment" spellcheck="true"># i.e. the highest areas of vertical lines should be larger values</span>    histogram <span class="token operator">=</span> None    histogram <span class="token operator">=</span> np<span class="token punctuation">.</span>sum<span class="token punctuation">(</span>bottom_half<span class="token punctuation">,</span> axis <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> histogram<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://suljaxm.com/5_peaks.png" alt="Figure 5 统计频数直方图" title="Histogram Peaks Visual"></p><p>最后，我借助函数<code>numpy.polyfit()</code>通过一个二阶多项式来拟合车道线像素。使用它们的x和y像素位置来拟合一个二阶多项式曲线$f(y) = Ay^2 + By + C$，</p><p><img src="http://suljaxm.com/5_fit.png" alt="Figure 6 拟合曲线" title="Fit Visual"></p><h3 id="2-5-车道曲率和车辆位置"><a href="#2-5-车道曲率和车辆位置" class="headerlink" title="2.5 车道曲率和车辆位置"></a>2.5 车道曲率和车辆位置</h3><p>通过<a href="https://www.intmath.com/applications-differentiation/8-radius-curvature.php" target="_blank" rel="noopener">曲率半径</a>的参考公式 $R_curve = \frac{ [1+ (\frac{dy} {dx})^{2} ] ^ {1.5} } {|\frac{d^2y} {dx^2}|}$，编写函数<code>measure re_ature_real()</code>计算曲线<code>x=f(y)</code>任意点x处曲率半径的直线</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">measure_curvature_real</span><span class="token punctuation">(</span>left_fitx<span class="token punctuation">,</span> right_fitx<span class="token punctuation">,</span> ploty<span class="token punctuation">,</span> left_fit<span class="token punctuation">,</span> right_fit<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># Define conversions in x and y from pixels space to meters</span>    ym_per_pix <span class="token operator">=</span> <span class="token number">16.0</span><span class="token operator">/</span><span class="token number">720</span> <span class="token comment" spellcheck="true"># meters per pixel in y dimension</span>    xm_per_pix <span class="token operator">=</span> <span class="token number">3.7</span><span class="token operator">/</span><span class="token number">1000</span> <span class="token comment" spellcheck="true"># meters per pixel in x dimension</span>    leftx <span class="token operator">=</span> left_fitx<span class="token operator">*</span>xm_per_pix    rightx <span class="token operator">=</span> right_fitx<span class="token operator">*</span>xm_per_pix    ploty <span class="token operator">=</span> ploty<span class="token operator">*</span>ym_per_pix    left_fit_cr <span class="token operator">=</span> np<span class="token punctuation">.</span>polyfit<span class="token punctuation">(</span>ploty<span class="token punctuation">,</span> leftx<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>    right_fit_cr <span class="token operator">=</span> np<span class="token punctuation">.</span>polyfit<span class="token punctuation">(</span>ploty<span class="token punctuation">,</span> rightx<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># Define y-value where we want radius of curvature</span>    <span class="token comment" spellcheck="true"># We'll choose the maximum y-value, corresponding to the bottom of the image</span>    y_eval <span class="token operator">=</span> np<span class="token punctuation">.</span>max<span class="token punctuation">(</span>ploty<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># Implement the calculation of R_curve (radius of curvature) </span>    left_curverad <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>left_fit_cr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span>y_eval<span class="token operator">*</span>ym_per_pix <span class="token operator">+</span> left_fit_cr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">1.5</span><span class="token punctuation">)</span> <span class="token operator">/</span> np<span class="token punctuation">.</span>absolute<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>left_fit_cr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    right_curverad <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>right_fit_cr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span>y_eval<span class="token operator">*</span>ym_per_pix <span class="token operator">+</span> right_fit_cr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">1.5</span><span class="token punctuation">)</span> <span class="token operator">/</span> np<span class="token punctuation">.</span>absolute<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>right_fit_cr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> left_curverad<span class="token punctuation">,</span> right_curverad<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>$car_{p}$ 是汽车在图片中的位置，因为相机安装在汽车的中心，这就相当于取图像宽度的一半<code>car_position = img.shape[1]/2</code>。</li><li>$xm_{pp}$ 是图像像素与实际距离之间的关系，即代码中的<code>xm_per_pix = 3.7/1000</code>，其中3.7是车道线实际宽度3.7米，1000是图片像素的像素距离。</li><li>$lanecenter_{p}$ 是车道线中心，通过检测图片中沿x轴的车道线来计算的，即<code>lane_center_position = (r_fit_x_int + l_fit_x_int) /2</code>。</li></ul><p>最后，车辆相对于车道中心的位置$center_{d}$计算公式如下，<br>$center_{d} = (car_{p} - lanecenter_{p}) * xm_{pp}$</p><h3 id="2-6-检测效果"><a href="#2-6-检测效果" class="headerlink" title="2.6 检测效果"></a>2.6 检测效果</h3><p><img src="http://suljaxm.com/5_Output.png" alt="Figure 6 检测结果" title="Output"></p><hr><h2 id="三、视频的Pipeline"><a href="#三、视频的Pipeline" class="headerlink" title="三、视频的Pipeline"></a>三、视频的Pipeline</h2><p>将图片的检测方法运用到车辆行驶的视频上，可以获得轻微抖动的检测效果，没有会导致汽车驶离道路的灾难性故障。</p><p> <a href="https://github.com/suljaxm/CarND-Advanced-Lane-Lines/blob/master/project_video_output.mp4" target="_blank" rel="noopener">视频链接</a></p><p><a href="https://github.com/suljaxm/CarND-Advanced-Lane-Lines" target="_blank" rel="noopener">参考代码</a></p>]]></content>
      
      
      <categories>
          
          <category> 无人驾驶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 无人车 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
