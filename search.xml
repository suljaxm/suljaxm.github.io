<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>URDF建模</title>
      <link href="/2019/08/14/urdf-jian-mo/"/>
      <url>/2019/08/14/urdf-jian-mo/</url>
      
        <content type="html"><![CDATA[<h2 id="一、URDF介绍"><a href="#一、URDF介绍" class="headerlink" title="一、URDF介绍"></a>一、URDF介绍</h2><p><a href="http://wiki.ros.org/action/fullsearch/urdf?action=fullsearch&context=180&value=linkto%3A%22urdf%22" title="Click to do a full-text search for this title" target="_blank" rel="noopener">URDF</a>(统一机器人描述格式) 是ROS中重要的机器人描述格式。<strong>URDF</strong>的主要语言是 <a href="http://wiki.ros.org/urdf/XML" target="_blank" rel="noopener">XML</a>，包含 <a href="http://wiki.ros.org/urdf/XML/link" target="_blank" rel="noopener">link</a>，<a href="http://wiki.ros.org/urdf/XML/joint" target="_blank" rel="noopener">joint</a>，<a href="http://wiki.ros.org/urdf/XML/robot" target="_blank" rel="noopener">robot</a> 等描述信息。</p><h2 id="二、四轮车建模"><a href="#二、四轮车建模" class="headerlink" title="二、四轮车建模"></a>二、四轮车建模</h2><div align="center"><img width="400" height="300" src="https://upload-images.jianshu.io/upload_images/15704030-486e191920aa8471.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></div><h3 id="2-1-汽车框架"><a href="#2-1-汽车框架" class="headerlink" title="2.1 汽车框架"></a>2.1 汽车框架</h3><p><code>&lt;robot name=&quot;mbot&quot;&gt; ... &lt;/robot&gt;</code> 是整个机器人的框架，所有模块的信息都必须在此框架范围内, 及将 <code>...</code> 替换成汽车主体。</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" ?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>robot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mbot<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token comment" spellcheck="true">&lt;!-- mbot robot links and joints and more --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>robot</span><span class="token punctuation">></span></span></code></pre><h3 id="2-2-车身"><a href="#2-2-车身" class="headerlink" title="2.2 车身"></a>2.2 车身</h3><p>车身当作所有组件的坐标系，中心点为原点。</p><pre class=" language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>base_link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>visual</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> 0 0 0<span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>geometry</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>box</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.40 0.20 0.16<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>geometry</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>material</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>yellow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">rgba</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1 0.4 0 1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>material</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>visual</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>link</span><span class="token punctuation">></span></span></code></pre><h3 id="2-2-车轮"><a href="#2-2-车轮" class="headerlink" title="2.2 车轮"></a>2.2 车轮</h3><p>总共四个轮子，每个轮子都有一个<strong>link</strong>和<strong>joint</strong>属性，与车身连接类型为<strong>continuous</strong>。</p><pre class=" language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left_back_wheel_link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>visual</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.5707 0 0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>geometry</span><span class="token punctuation">></span></span>                &lt;cylinder radius="0.06" length = "0.025"/>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>geometry</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>material</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>blue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">rgba</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 1 0.9<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>material</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>visual</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>link</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>joint</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left_back_wheel_joint<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>continuous<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-0.1 -0.1 -0.08<span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>base_link<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>child</span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left_back_wheel_link<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>axis</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 1 0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>joint</span><span class="token punctuation">></span></span></code></pre><h3 id="2-3-传感器"><a href="#2-3-传感器" class="headerlink" title="2.3 传感器"></a>2.3 传感器</h3><p>大多数传感器与车身的连接类型为<strong>fixed</strong>，相机(camera) 固定在车身头部。</p><pre class=" language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left_camera_link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>visual</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> 0 0 0 <span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>geometry</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>box</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.03 0.04 0.04<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>geometry</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>material</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>black<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">rgba</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0 0.95<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>material</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>visual</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>link</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>joint</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left_camera_joint<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fixed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.17 -0.05 0.10<span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>base_link<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>child</span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left_camera_link<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>joint</span><span class="token punctuation">></span></span></code></pre><p>激光雷达(laser) 固定在车身中部</p><pre class=" language-xml"><code class="language-xml">   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>laser_link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>visual</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> 0 0 0 <span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>geometry</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cylinder</span> <span class="token attr-name">length</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.05<span class="token punctuation">"</span></span> <span class="token attr-name">radius</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.05<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>geometry</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>material</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>black<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>visual</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>link</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>joint</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>laser_joint<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fixed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin</span> <span class="token attr-name">xyz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0.105<span class="token punctuation">"</span></span> <span class="token attr-name">rpy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>base_link<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>child</span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>laser_link<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>joint</span><span class="token punctuation">></span></span></code></pre><h2 id="三、模型整体结构分析"><a href="#三、模型整体结构分析" class="headerlink" title="三、模型整体结构分析"></a>三、模型整体结构分析</h2><p>使用 <strong>urdf_to_graphiz</strong> 工具查看模型 <strong>xxx.urdf</strong> 的整体结构。</p><pre class=" language-cpp"><code class="language-cpp">urdf_to_graphiz xxx<span class="token punctuation">.</span>urdf</code></pre><div align="center"><img width="600" height="300" src="https://upload-images.jianshu.io/upload_images/15704030-9a606cc7c78dab3f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></div>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 机器人 </tag>
            
            <tag> XML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS机器人的tf变换</title>
      <link href="/2019/08/09/ros-ji-qi-ren-de-tf-bian-huan/"/>
      <url>/2019/08/09/ros-ji-qi-ren-de-tf-bian-huan/</url>
      
        <content type="html"><![CDATA[<h2 id="一、ROS的TF功能包"><a href="#一、ROS的TF功能包" class="headerlink" title="一、ROS的TF功能包"></a>一、ROS的TF功能包</h2><p><strong>TF功能包</strong>，可以通过广播<strong>TF变换</strong>和<strong>监听TF变换</strong>获取如下坐标变换关系：</p><ul><li>机器人局部坐标系相对于全局坐标系的关系。</li><li>机器人夹取的物体相对于机器人中心坐标系的位置.</li><li>机器人中心坐标系相对于全局坐标系的位置。</li></ul><div align="center"><img width="400" height="300" src="https://upload-images.jianshu.io/upload_images/15704030-2e0500763298efff.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></div><h2 id="二、TF坐标变换"><a href="#二、TF坐标变换" class="headerlink" title="二、TF坐标变换"></a>二、TF坐标变换</h2><p>已知激光雷达和机器人底盘的坐标关系，广播并监听机器人的坐标变换，求解激光雷达数据在底盘坐标系下的坐标值。</p><div align="center"><img width="550" height="200" src="https://upload-images.jianshu.io/upload_images/15704030-9a455c32d169f5b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></div><h3 id="2-1-TF广播器"><a href="#2-1-TF广播器" class="headerlink" title="2.1 TF广播器"></a>2.1 TF广播器</h3><p>首先定义TF 广播器(<a href="http://docs.ros.org/jade/api/tf/html/c++/classtf_1_1TransformBroadcaster.html" target="_blank" rel="noopener">TransformBroadcaster</a>),</p><pre class=" language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">// 创建tf的广播器</span><span class="token keyword">static</span> tf<span class="token operator">::</span>TransformBroadcaster br<span class="token punctuation">;</span></code></pre><p>接着创建坐标变换值(<strong>transform</strong>)，比如在这里的变换关系中，没有旋转变换，只有平移变换，所以四元数<strong>Quaternion</strong>可以为<em>(0,0,0,1)<em>，而位移向量则*</em>Vector3**是</em>(0.1, 0.0, 0.2)*，位移的单位是米。</p><pre class=" language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">// 初始化tf数据</span>tf<span class="token operator">::</span>Transform transform<span class="token punctuation">;</span>transform<span class="token punctuation">.</span><span class="token function">setOrigin</span><span class="token punctuation">(</span> tf<span class="token operator">::</span><span class="token function">Vector3</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>transform<span class="token punctuation">.</span><span class="token function">setRotation</span><span class="token punctuation">(</span> tf<span class="token operator">::</span><span class="token function">Quaternion</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>最后发布坐标变换(<strong>sendTransform</strong>)</p><pre class=" language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">// 广播base_link与base_laser坐标系之间的tf数据</span>br<span class="token punctuation">.</span><span class="token function">sendTransform</span><span class="token punctuation">(</span>tf<span class="token operator">::</span><span class="token function">StampedTransform</span><span class="token punctuation">(</span>transform<span class="token punctuation">,</span> ros<span class="token operator">::</span>Time<span class="token operator">::</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"base_link"</span><span class="token punctuation">,</span> <span class="token string">"base_laser"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="2-2-完整代码-TF广播器"><a href="#2-2-完整代码-TF广播器" class="headerlink" title="2.2 完整代码(TF广播器)"></a>2.2 完整代码(TF广播器)</h3><pre class=" language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">/** * 该例程产生tf数据，并计算、发布base_laser的位置指令 */</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ros/ros.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;tf/transform_broadcaster.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 初始化ROS节点</span>    ros<span class="token operator">::</span><span class="token function">init</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token string">"robot_tf_broadcaster"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 订阅base_link的位置话题</span>    ros<span class="token operator">::</span>NodeHandle node<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建tf的广播器</span>    <span class="token keyword">static</span> tf<span class="token operator">::</span>TransformBroadcaster br<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 初始化tf数据</span>        tf<span class="token operator">::</span>Transform transform<span class="token punctuation">;</span>        transform<span class="token punctuation">.</span><span class="token function">setOrigin</span><span class="token punctuation">(</span> tf<span class="token operator">::</span><span class="token function">Vector3</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        transform<span class="token punctuation">.</span><span class="token function">setRotation</span><span class="token punctuation">(</span> tf<span class="token operator">::</span><span class="token function">Quaternion</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 广播base_link与base_laser坐标系之间的tf数据</span>        br<span class="token punctuation">.</span><span class="token function">sendTransform</span><span class="token punctuation">(</span>tf<span class="token operator">::</span><span class="token function">StampedTransform</span><span class="token punctuation">(</span>transform<span class="token punctuation">,</span> ros<span class="token operator">::</span>Time<span class="token operator">::</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"base_link"</span><span class="token punctuation">,</span> <span class="token string">"base_laser"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3 id="2-3-TF监听器"><a href="#2-3-TF监听器" class="headerlink" title="2.3 TF监听器"></a>2.3 TF监听器</h3><p>首先定义一个TF监听器(<strong>TransformListener</strong>)</p><pre class=" language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">// 创建tf的监听器</span>tf<span class="token operator">::</span>TransformListener listener<span class="token punctuation">;</span></code></pre><p>获取TF变换后进行坐标系变化，此时我们可以设置检测到的<strong>base_laser</strong>(<strong>laser_point</strong>)为<em>(0.3, 0.0, 0.0)</em>，然后就该检测信息，通过<strong>transformPoint</strong>转换到<strong>base_link</strong>(<strong>base_point</strong>)上的点。</p><pre class=" language-cpp"><code class="language-cpp">geometry_msgs<span class="token operator">::</span>PointStamped base_point<span class="token punctuation">;</span>listener<span class="token punctuation">.</span><span class="token function">transformPoint</span><span class="token punctuation">(</span><span class="token string">"base_link"</span><span class="token punctuation">,</span> laser_point<span class="token punctuation">,</span> base_point<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="2-4-完成代码-TF监听器"><a href="#2-4-完成代码-TF监听器" class="headerlink" title="2.4 完成代码(TF监听器)"></a>2.4 完成代码(TF监听器)</h3><pre class=" language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">/** * 该例程监听tf数据，并计算、发布base_laser的位置指令 */</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ros/ros.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;tf/transform_listener.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;geometry_msgs/PointStamped.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 初始化ROS节点</span>    ros<span class="token operator">::</span><span class="token function">init</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token string">"robot_tf_listener"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建节点句柄</span>    ros<span class="token operator">::</span>NodeHandle node<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建tf的监听器</span>    tf<span class="token operator">::</span>TransformListener listener<span class="token punctuation">;</span>    ros<span class="token operator">::</span>Rate <span class="token function">rate</span><span class="token punctuation">(</span><span class="token number">10.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//我们将在base_laser帧中创建一个要转换为base_link帧的点</span>        geometry_msgs<span class="token operator">::</span>PointStamped laser_point<span class="token punctuation">;</span>        laser_point<span class="token punctuation">.</span>header<span class="token punctuation">.</span>frame_id <span class="token operator">=</span> <span class="token string">"base_laser"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//我们将在我们的简单示例中使用最近可用的转换</span>        laser_point<span class="token punctuation">.</span>header<span class="token punctuation">.</span>stamp <span class="token operator">=</span> ros<span class="token operator">::</span><span class="token function">Time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//laser_point检测点获取</span>        laser_point<span class="token punctuation">.</span>point<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0.3</span><span class="token punctuation">;</span>        laser_point<span class="token punctuation">.</span>point<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>        laser_point<span class="token punctuation">.</span>point<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>        <span class="token keyword">try</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 等待获取监听信息base_link和base_laser</span>            listener<span class="token punctuation">.</span><span class="token function">waitForTransform</span><span class="token punctuation">(</span><span class="token string">"base_link"</span><span class="token punctuation">,</span> <span class="token string">"base_laser"</span><span class="token punctuation">,</span> ros<span class="token operator">::</span><span class="token function">Time</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ros<span class="token operator">::</span><span class="token function">Duration</span><span class="token punctuation">(</span><span class="token number">3.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            geometry_msgs<span class="token operator">::</span>PointStamped base_point<span class="token punctuation">;</span>            listener<span class="token punctuation">.</span><span class="token function">transformPoint</span><span class="token punctuation">(</span><span class="token string">"base_link"</span><span class="token punctuation">,</span> laser_point<span class="token punctuation">,</span> base_point<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">ROS_INFO</span><span class="token punctuation">(</span><span class="token string">"base_laser: (%.2f, %.2f. %.2f) -----> base_link: (%.2f, %.2f, %.2f) at time %.2f"</span><span class="token punctuation">,</span>                laser_point<span class="token punctuation">.</span>point<span class="token punctuation">.</span>x<span class="token punctuation">,</span> laser_point<span class="token punctuation">.</span>point<span class="token punctuation">.</span>y<span class="token punctuation">,</span> laser_point<span class="token punctuation">.</span>point<span class="token punctuation">.</span>z<span class="token punctuation">,</span>                base_point<span class="token punctuation">.</span>point<span class="token punctuation">.</span>x<span class="token punctuation">,</span> base_point<span class="token punctuation">.</span>point<span class="token punctuation">.</span>y<span class="token punctuation">,</span> base_point<span class="token punctuation">.</span>point<span class="token punctuation">.</span>z<span class="token punctuation">,</span> base_point<span class="token punctuation">.</span>header<span class="token punctuation">.</span>stamp<span class="token punctuation">.</span><span class="token function">toSec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">catch</span><span class="token punctuation">(</span>tf<span class="token operator">::</span>TransformException<span class="token operator">&amp;</span> ex<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">ROS_ERROR</span><span class="token punctuation">(</span><span class="token string">"Received an exception trying to transform a point from \"base_laser\" to \"base_link\": %s"</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span><span class="token function">what</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        rate<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2 id="三、运行结果"><a href="#三、运行结果" class="headerlink" title="三、运行结果"></a>三、运行结果</h2><p>启动两个节点时，就可以在监听处获得base_laser和base_link的坐标关系了。<br>说明的是检测物体为世界坐标系，base_laser和base_link是局部坐标系。</p><pre class=" language-cpp"><code class="language-cpp"><span class="token punctuation">[</span> INFO<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1565335443.030506273</span><span class="token punctuation">]</span><span class="token operator">:</span> base_laser<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token number">0.30</span><span class="token punctuation">,</span> <span class="token number">0.00</span><span class="token punctuation">.</span> <span class="token number">0.00</span><span class="token punctuation">)</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">></span> base_link<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token number">0.40</span><span class="token punctuation">,</span> <span class="token number">0.00</span><span class="token punctuation">,</span> <span class="token number">0.20</span><span class="token punctuation">)</span> at time <span class="token number">1565335443.00</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS通信(海龟模拟器)</title>
      <link href="/2019/07/29/ros-tong-xin-hai-gui-mo-ni-qi/"/>
      <url>/2019/07/29/ros-tong-xin-hai-gui-mo-ni-qi/</url>
      
        <content type="html"><![CDATA[<h2 id="一、发布指令"><a href="#一、发布指令" class="headerlink" title="一、发布指令"></a>一、发布指令</h2><h3 id="1-1-发布海龟速度指令，让海龟圆周运动"><a href="#1-1-发布海龟速度指令，让海龟圆周运动" class="headerlink" title="1.1 发布海龟速度指令，让海龟圆周运动"></a>1.1 发布海龟速度指令，让海龟圆周运动</h3><p>创建一个<strong>Publisher</strong>，发布名为<strong>turtle1/cmd_vel</strong>的<strong>topic</strong>，其消息类型为<strong>geometry_msgs::Twist</strong>，通过控制<strong>cmd_vel</strong>中<strong>linear</strong>下的<strong>x</strong>和<strong>angular</strong>下的<strong>z</strong>。</p><pre class=" language-cpp"><code class="language-cpp">geometry_msgs<span class="token operator">/</span>Vector3 linear  float64 x  float64 y  float64 zgeometry_msgs<span class="token operator">/</span>Vector3 angular  float64 x  float64 y  float64 z</code></pre><h3 id="1-2-参考代码"><a href="#1-2-参考代码" class="headerlink" title="1.2 参考代码"></a>1.2 参考代码</h3><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;sstream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"ros/ros.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"std_msgs/String.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"geometry_msgs/Twist.h"</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ROS节点初始化</span>    ros<span class="token operator">::</span><span class="token function">init</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token string">"turtle_publisher"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建节点句柄</span>    ros<span class="token operator">::</span>NodeHandle n<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建一个Publisher，发布名为turtle1/cmd_vel的topic，消息类型为geometry_msgs::Twist，传输空间大小1000</span>    ros<span class="token operator">::</span>Publisher chatter_pub <span class="token operator">=</span> n<span class="token punctuation">.</span>advertise<span class="token operator">&lt;</span>geometry_msgs<span class="token operator">::</span>Twist<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">"turtle1/cmd_vel"</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 设置循环的频率</span>    ros<span class="token operator">::</span>Rate <span class="token function">loop_rate</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>ros<span class="token operator">::</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 初始化geometry_msgs::Twist类型的消息</span>        geometry_msgs<span class="token operator">::</span>Twist Twist_msg<span class="token punctuation">;</span>        <span class="token keyword">float</span> linear_x<span class="token punctuation">,</span> linear_y<span class="token punctuation">,</span> angular_z<span class="token punctuation">;</span>        linear_x <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        linear_y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        angular_z <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        Twist_msg<span class="token punctuation">.</span>linear<span class="token punctuation">.</span>x <span class="token operator">=</span> linear_x<span class="token punctuation">;</span>        Twist_msg<span class="token punctuation">.</span>linear<span class="token punctuation">.</span>y <span class="token operator">=</span> linear_y<span class="token punctuation">;</span>        Twist_msg<span class="token punctuation">.</span>angular<span class="token punctuation">.</span>z <span class="token operator">=</span> angular_z<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 发布消息</span>        <span class="token function">ROS_INFO</span><span class="token punctuation">(</span><span class="token string">"I heard cmd_vel linear.x:[%f] linear.y:[%f] angular.z:[%f]"</span><span class="token punctuation">,</span>linear_x<span class="token punctuation">,</span> linear_y<span class="token punctuation">,</span> angular_z<span class="token punctuation">)</span><span class="token punctuation">;</span>        chatter_pub<span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span>Twist_msg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 按照循环频率延时</span>        loop_rate<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">++</span>count<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="二、定阅"><a href="#二、定阅" class="headerlink" title="二、定阅"></a>二、定阅</h2><h3 id="2-1-海龟的位置，并在终端中周期打印输出"><a href="#2-1-海龟的位置，并在终端中周期打印输出" class="headerlink" title="2.1 海龟的位置，并在终端中周期打印输出"></a>2.1 海龟的位置，并在终端中周期打印输出</h3><p>创建一个<strong>Subscriber</strong>，订阅名为<strong>turtle1/pose</strong>的<strong>topic</strong>，其消息类型为<strong>turtlesim::Pose</strong>，注册回调函数<strong>chatterCallback_pose</strong>，而输出<strong>turtle1/pose</strong>中<strong>x</strong>， <strong>y</strong>，<strong>theta</strong>就是海龟<strong>turtle1</strong>的位置。</p><pre class=" language-cpp"><code class="language-cpp">float32 xfloat32 yfloat32 thetafloat32 linear_velocityfloat32 angular_velocity</code></pre><h3 id="2-2-参考代码："><a href="#2-2-参考代码：" class="headerlink" title="2.2 参考代码："></a>2.2 参考代码：</h3><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"ros/ros.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"std_msgs/String.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"turtlesim/Pose.h"</span></span><span class="token comment" spellcheck="true">// 接收到订阅的消息后，会进入消息回调函数</span><span class="token keyword">void</span> <span class="token function">chatterCallback_pose</span><span class="token punctuation">(</span><span class="token keyword">const</span> turtlesim<span class="token operator">::</span>Pose<span class="token operator">::</span>ConstPtr<span class="token operator">&amp;</span> Pose_msg<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 将接收到的消息打印出来</span>    <span class="token keyword">float</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> theta<span class="token punctuation">;</span>    x<span class="token operator">=</span>Pose_msg<span class="token operator">-</span><span class="token operator">></span>x<span class="token punctuation">;</span>    y<span class="token operator">=</span>Pose_msg<span class="token operator">-</span><span class="token operator">></span>y<span class="token punctuation">;</span>    theta<span class="token operator">=</span>Pose_msg<span class="token operator">-</span><span class="token operator">></span>theta<span class="token punctuation">;</span>    <span class="token function">ROS_INFO</span><span class="token punctuation">(</span><span class="token string">"I heard pose x:[%f] y:[%f] z:[%f]"</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> theta<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 初始化ROS节点</span>    ros<span class="token operator">::</span><span class="token function">init</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token string">"turtle_subscriber"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建节点句柄     </span>    ros<span class="token operator">::</span>NodeHandle n<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建一个Subscriber，订阅名为turtle1/pose的topic，注册回调函数chatterCallback_pose</span>    ros<span class="token operator">::</span>Subscriber sub <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">"turtle1/pose"</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> chatterCallback_pose<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 循环等待回调函数</span>    ros<span class="token operator">::</span><span class="token function">spin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="三、-创建新服务"><a href="#三、-创建新服务" class="headerlink" title="三、 创建新服务"></a>三、 创建新服务</h2><h3 id="3-1-创建新海龟的服务，在仿真器中产生一只新海龟"><a href="#3-1-创建新海龟的服务，在仿真器中产生一只新海龟" class="headerlink" title="3.1 创建新海龟的服务，在仿真器中产生一只新海龟"></a>3.1 创建新海龟的服务，在仿真器中产生一只新海龟</h3><p>创建一个<strong>client</strong>，<strong>service</strong>消息类型是<strong>turtlesim::Spawn</strong>，向服务端传入设置好的海龟位置和名称(<strong>x y theta name</strong>)。</p><pre class=" language-cpp"><code class="language-cpp">Node<span class="token operator">:</span> <span class="token operator">/</span>turtlesimURI<span class="token operator">:</span> rosrpc<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">10.0</span><span class="token punctuation">.</span><span class="token number">2.15</span><span class="token operator">:</span><span class="token number">60487</span>Type<span class="token operator">:</span> turtlesim<span class="token operator">/</span>SpawnArgs<span class="token operator">:</span> x y theta name</code></pre><h3 id="3-2-参考代码："><a href="#3-2-参考代码：" class="headerlink" title="3.2 参考代码："></a>3.2 参考代码：</h3><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"ros/ros.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"std_srvs/SetBool.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"turtlesim/Spawn.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span>             </span><span class="token comment" spellcheck="true">/* srand, rand */</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;time.h></span>               </span><span class="token comment" spellcheck="true">/* time */</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ROS节点初始化</span>    ros<span class="token operator">::</span><span class="token function">init</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token string">"turtle_client"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// set argv[1] not null</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">ROS_INFO</span><span class="token punctuation">(</span><span class="token string">"argv: %s"</span><span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建节点句柄</span>    ros<span class="token operator">::</span>NodeHandle n<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建一个client，service消息类型是turtlesim::Spawn  turtlesim/Spawn</span>    ros<span class="token operator">::</span>service<span class="token operator">::</span><span class="token function">waitForService</span><span class="token punctuation">(</span><span class="token string">"/spawn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ros<span class="token operator">::</span>ServiceClient client <span class="token operator">=</span> n<span class="token punctuation">.</span>serviceClient<span class="token operator">&lt;</span>turtlesim<span class="token operator">::</span>Spawn<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">"/spawn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建turtlesim::Spawn类型的service消息</span>    turtlesim<span class="token operator">::</span>Spawn srv<span class="token punctuation">;</span>    <span class="token function">srand</span> <span class="token punctuation">(</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    srv<span class="token punctuation">.</span>request<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>    srv<span class="token punctuation">.</span>request<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>    srv<span class="token punctuation">.</span>request<span class="token punctuation">.</span>theta <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">10</span><span class="token operator">*</span><span class="token number">0.5</span><span class="token punctuation">;</span>    srv<span class="token punctuation">.</span>request<span class="token punctuation">.</span>name <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 发布service请求，等待应答结果</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>srv<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">ROS_INFO</span><span class="token punctuation">(</span><span class="token string">"Response : ok"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token punctuation">{</span>        <span class="token function">ROS_ERROR</span><span class="token punctuation">(</span><span class="token string">"Failed to call service spawn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="四、控制"><a href="#四、控制" class="headerlink" title="四、控制"></a>四、控制</h2><h3 id="控制特定海龟的速度大小"><a href="#控制特定海龟的速度大小" class="headerlink" title="控制特定海龟的速度大小"></a>控制特定海龟的速度大小</h3><p>这里和1中的实现方式相似，可以在终端输入控制的参数<strong>argv</strong>，然后由这些参数控制海龟状态。</p><p>ps:有时候在编译时会出现<strong>warning:  Clock skew detected.  Your build may be incomplete.</strong>这样的警告。这是时钟同步问题，可以</p><pre class=" language-cpp"><code class="language-cpp">find <span class="token punctuation">.</span> <span class="token operator">-</span>type f <span class="token operator">|</span> xargs <span class="token operator">-</span>n <span class="token number">5</span> touch</code></pre>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS初识</title>
      <link href="/2019/07/24/ros-chu-shi/"/>
      <url>/2019/07/24/ros-chu-shi/</url>
      
        <content type="html"><![CDATA[<h2 id="一、启动"><a href="#一、启动" class="headerlink" title="一、启动"></a>一、启动</h2><h3 id="1-1核心服务点"><a href="#1-1核心服务点" class="headerlink" title="1.1核心服务点"></a>1.1核心服务点</h3><pre class=" language-cpp"><code class="language-cpp">roscore       #核心服务点</code></pre><h3 id="1-2仿真节点"><a href="#1-2仿真节点" class="headerlink" title="1.2仿真节点"></a>1.2仿真节点</h3><pre class=" language-cpp"><code class="language-cpp">rosrun turtlesim turtlesim_node   #仿真节点</code></pre><div align="center"><img width="350" height="250" src="https://upload-images.jianshu.io/upload_images/15704030-b5a1e831bfb50072.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></div><h2 id="二、创建"><a href="#二、创建" class="headerlink" title="二、创建"></a>二、创建</h2><h3 id="新的海龟turtle3"><a href="#新的海龟turtle3" class="headerlink" title="新的海龟turtle3"></a>新的海龟turtle3</h3><pre class=" language-cpp"><code class="language-cpp">rosservice call <span class="token operator">/</span>spawn "x<span class="token operator">:</span> <span class="token number">5.0</span>y<span class="token operator">:</span> <span class="token number">0.0</span>theta<span class="token operator">:</span> <span class="token number">0.5</span>name<span class="token operator">:</span> <span class="token string">'turtle3'</span>"</code></pre><h2 id="三、控制"><a href="#三、控制" class="headerlink" title="三、控制"></a>三、控制</h2><h3 id="海龟turtle3原地做圆周运动"><a href="#海龟turtle3原地做圆周运动" class="headerlink" title="海龟turtle3原地做圆周运动"></a>海龟turtle3原地做圆周运动</h3><pre class=" language-cpp"><code class="language-cpp">rostopic pub <span class="token operator">-</span>r <span class="token number">10</span> <span class="token operator">/</span>turtle3<span class="token operator">/</span>cmd_vel geometry_msgs<span class="token operator">/</span>Twist "linear<span class="token operator">:</span>  x<span class="token operator">:</span> <span class="token number">0.5</span>  y<span class="token operator">:</span> <span class="token number">0.0</span>  z<span class="token operator">:</span> <span class="token number">0.0</span>angular<span class="token operator">:</span>  x<span class="token operator">:</span> <span class="token number">0.0</span>  y<span class="token operator">:</span> <span class="token number">0.0</span>  z<span class="token operator">:</span> <span class="token number">1.0</span>"</code></pre><div align="center"><img width="350" height="250" src="https://upload-images.jianshu.io/upload_images/15704030-f4810cf91218d879.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></div><h2 id="四、计算图"><a href="#四、计算图" class="headerlink" title="四、计算图"></a>四、计算图</h2><h3 id="查看海龟仿真系统对应的计算图"><a href="#查看海龟仿真系统对应的计算图" class="headerlink" title="查看海龟仿真系统对应的计算图"></a>查看海龟仿真系统对应的计算图</h3><pre class=" language-cpp"><code class="language-cpp">rqt_graph</code></pre><div align="center"><img width="450" height="250" src="https://upload-images.jianshu.io/upload_images/15704030-5a691c874d44327b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></div><h2 id="五、信息可视化"><a href="#五、信息可视化" class="headerlink" title="五、信息可视化"></a>五、信息可视化</h2><h3 id="5-1查看-turtle2-pose的可视化信息"><a href="#5-1查看-turtle2-pose的可视化信息" class="headerlink" title="5.1查看 /turtle2/pose的可视化信息"></a>5.1查看 /turtle2/pose的可视化信息</h3><pre class=" language-cpp"><code class="language-cpp">rqt_plot</code></pre><div align="center"><img width="450" height="250" src="https://upload-images.jianshu.io/upload_images/15704030-8584198e2267f8f4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></div><h3 id="5-2查看-turtle2-pose的实时信息"><a href="#5-2查看-turtle2-pose的实时信息" class="headerlink" title="5.2查看 /turtle2/pose的实时信息"></a>5.2查看 /turtle2/pose的实时信息</h3><pre class=" language-cpp"><code class="language-cpp">rostopic echo <span class="token operator">/</span>turtle2<span class="token operator">/</span>pose</code></pre>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 机器人 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
